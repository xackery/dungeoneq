sub EVENT_ENTERZONE {
    quest::settimer(1,6);
    if ($zoneid == 386) { 
        return;
    }

    if (quest::get_data($client->CharacterID() . "-state") ne "ENTERING_DUNGEON") {
        return;
    }

    $deaths = quest::get_data($client->CharacterID() . "-deaths");
    if ($deaths eq "" && !$client->GetPVP()) {
        $client->SetPVP(1);
    }
    if ($deaths ne "" && $client->GetPVP()) {
        $client->SetPVP(0);
    }
    
    quest::set_data($client->CharacterID() . "-state", "INSIDE_DUNGEON");
    quest::set_data($client->CharacterID() . "-dialog-count", 1);
    quest::set_data($client->CharacterID() . "-dialog-header", "you have failed your dungeon.");
    quest::set_data($client->CharacterID() . "-dialog-option-1-text", "give up");
    quest::set_data($client->CharacterID() . "-dialog-option-1-effect", "giveup");
    quest::set_data($client->CharacterID() . "-dialog-option-1-result", "you admit defeat, but continue your journey");
    quest::set_data($client->CharacterID() . "-dialog-option-2-text", "start over - reset character back to level 1");
    quest::set_data($client->CharacterID() . "-dialog-option-2-effect", "reset");
    quest::set_data($client->CharacterID() . "-dialog-option-2-result", "resetting you to level 1");
    $instance = quest::get_data($client->CharacterID() . "-dungeon-instance-id");

    $client->Message(15, "You have entered a new dungeon. (" . $instance . ")");
    
}

sub EVENT_TIMER {
    if ($timer != 1) {        
        return;
    }
    if ($client->GetAggroCount() > 0) {
        return;
    }
    if ($client->GetFeigned()) {
        return;
    }
    if (!$client->IsSitting()) {
        return;
    }
    for my $slot (0..25) {
        $spell_id = $client->FindBuffBySlot($slot);
        if (!$spell_id) {
            next;
        }
        if (quest::IsBeneficialSpell($spell_id)) {
            next;
        }
        $client->BuffFadeBySlot($slot, 1);
    }
    
}

sub EVENT_TASK_STAGE_COMPLETE {
    if ($client->GetGM()) {
        $client->Message(15, "ending dungeon");
    }

    if ($zoneid == 386) { 
        return;
    }
    
    $state = quest::get_data($client->CharacterID(). "-state");

    $taskid = quest::get_data($client->CharacterID() . "-dungeon-instance-taskid");

    DungeonSetCharacter($client->GetLevel()+1);

    $instance = quest::get_data($client->CharacterID() . "-dungeon-instance-id");
    $zoneName = quest::get_data($client->CharacterID() . "-dungeon-zonename");
    $x = quest::get_data($client->CharacterID() . "-dungeon-instance-x");
    $y = quest::get_data($client->CharacterID() . "-dungeon-instance-y");
    $z = quest::get_data($client->CharacterID() . "-dungeon-instance-z");
    $zoneID = quest::GetZoneID($zoneName);

    my @nlist = $entity_list->GetMobList();
    foreach my $mob (@nlist) {
        if (!$mob) {
            next;
        }
        if (!$mob->IsNPC()) {
            next;
        }
        
        if ($mob->GetOwnerID()) {
            next;
        }
        if ($mob->GetNPCTypeID() == 2000910) {
            next;
        }

        $mob->Depop(0);
    }

    DungeonSpawnChest($client, $x-5, $y, $z, 0);
    DungeonSpawnExit($x-8, $y, $z, 0);
    if (quest::ChooseRandom(0..8) == 0) {
        quest::spawn2(2000911, 0, 0, $x-10, $y, $z, 0);
    }
    quest::MovePCInstance($zoneID, $instance, $x, $y, $z, 0);

    quest::set_data($client->CharacterID(). "-state", "FINISHED_DUNGEON");

    if ($taskid == 290) {
        $client->UpdateTaskActivity(290, 1, 1);
    }
    if ($taskid == 291) {
        $client->UpdateTaskActivity(291, 1, 1);
    }

    if ($client->GetGM()) {
        $client->Message(15, "ending dungeon complete");
    }
}

sub EVENT_SAY {
    if (!$client->GetGM()) { 
        return;
    }
    $client->Message(1, "gm parse: $text");
    if ($text eq "id") {
        $target = $client->GetTarget();
        if (!$target) {
            $target = $client;
        }
        if ($target->IsClient()) {
            $target = $target->CastToClient();
        }

        $client->Message(15, "characterID is " . $target->CharacterID());
        return;
    }
    if ($text eq "chest") {
        $client->Message(1, "spawn chest");
        $target = $client->GetTarget();
        if (!$target) {
            $target = $client;
        }
        $target = $target->CastToClient();
        if (!$target) {
            $client->Message(1, "failed: target is not a client?");
            return;
        }

        $x = $target->GetX();
        $y = $target->GetY();
        $z = $target->GetZ();
        DungeonSpawnChest($target, $x, $y, $z, 0);
        return;
    }
    if ($text eq "aa") {
        #$client->Message(1, "aa grant");
        #$client->SetAAPoints(10);
        GiveAA($client);
        return;
    }
    if ($text eq "aareset") {
        $client->ResetAA();
        return;
    }
    if ($text eq "regen") {
        $client->Message(1, "doing regen");
        quest::settimer(1,6);
        return;
    }
    if ($text eq "pvp") {
        $client->SetPVP(1);
        return;
    }
    if ($text eq "points") {
        $points = plugin::RandomRange($client->GetLevel()..$client->GetLevel()*2);
        $client->UpdateLDoNPoints($points, 0);
        $client->Message(15, "You gained $points currency!");
        return;
    }

    if ($text eq "task") {
        $client->Message(1, "task for " . $zonesn);
        quest::assigntask(290);
        return;
    }
    if ($text eq "taskremove") {
        $client->Message(1, "removing all tasks");
        foreach my $taskid (290 .. 293) {
            $client->FailTask($taskid);            
        }
        return;
    }
    if ($text eq "rand") {
        $client->Message(1, "Random number between 1 and 2: " . plugin::RandomRange(1,2));
    }

    if ($text eq "class") {
        $target = $client->GetTarget();
        if (!$target) {
            $client->Message(15, "no target");
            return;
        }
        $client->Message(1, "class is " . $class . " and " . $target->GetClass());
    }
    if ($text eq "race") {
        $target = $client->GetTarget();
        if (!$target) {
            $client->Message(15, "no target");
            return;
        }
        $client->Message(15, "race is " . $target->GetRace());
    }
    if ($text eq "skipfix") {
        $target = $client->GetTarget();
        if (!$target) {
            $target = $client;
        }
        if ($target->IsClient()) {
            $target = $target->CastToClient();
        }
        quest::set_data($target->CharacterID() . "-state", "PREP");
        quest::set_data($target->CharacterID() . "-dialog-header", "you are saved by GM intervention");
        quest::set_data($target->CharacterID() . "-dialog-count", "1");
        quest::set_data($target->CharacterID() . "-dialog-option-1-text", "skip to next dungeon");
        quest::set_data($target->CharacterID() . "-dialog-option-1-effect", "skip");
        quest::set_data($target->CharacterID() . "-dialog-option-1-result", "GM skip commenced!");


        $client->Message(1, "fixing" . $target->CharacterID());
    }

    #quest::resettaskactivity(290, 0);   
    #$client->Message(1, "task activity" . $zone . ", instance" . $client->GetInstanceID());   
    #if ($task_id == 920 && $activity_id != 1) { return; }1   
    #$x = quest::get_data($client->CharacterID() . "-dungeon-instance-x");
    #$y = quest::get_data($client->CharacterID() . "-dungeon-instance-y");
    #$z = quest::get_data($client->CharacterID() . "-dungeon-instance-z");
    #DungeonSpawnChest($x-10, $y, $z, 0); m
}

# DungeonSetCharacter(level) # Sets a character to provided level, scribing all spells and skills available
sub DungeonSetCharacter {
    $level = shift;
    $client = plugin::val('$client');
    if ($level > 100) {
        return;
    }
    quest::level($level);
    
    # set all available skills to maximum for race/class at current level
    foreach my $skill (0 .. 77) {
        # continue the foreach loop using the next skill ID if the client cannot use the skill ID
        next unless $client->CanHaveSkill($skill);
        # create a scalar variable to store the maximum skill Value for the Skill ID
        my $maxSkill = $client->MaxSkill($skill, $client->GetClass(), $level);
        # continue the foreach loop using the next Skill ID if the client has a higher skill Value for the Skill ID
        next unless $maxSkill > $client->GetRawSkill($skill);
        # set the Skill ID to the maximum Value that the client is allowed
        $client->SetSkill($skill, $maxSkill);
    }
    GiveAA($client);
    quest::traindiscs($level, $level-1);
    quest::scribespells($level, $level-1);
}


sub DungeonSpawnChest {
    $client = shift;
    $x = shift;
    $y = shift;
    $z = shift;
    $h = shift;

    quest::spawn2(404062, 0, 0, $x, $y, $z, $h);
    $entity_list = plugin::val('$entity_list');

    $mob = $entity_list->GetMobByNpcTypeID(404062);
    $npc = $mob->CastToNPC();
    ItemChestGenerate($client, $npc);
    $points = plugin::RandomRange($client->GetLevel()..$client->GetLevel()*2);
    $client->UpdateLDoNPoints($points, 0);
    $client->Message(15, "You gained $points currency!");
}

sub DungeonSpawnExit {
    $x = shift;
    $y = shift;
    $z = shift;
    $h = shift;
    quest::spawn2(2000910, 0, 0, $x, $y, $z, $h);    
}


sub ItemChestGenerate {
    my $client = shift;
    my $npc = shift;
    $taskid = quest::get_data($client->CharacterID() . "-dungeon-instance-taskid");
    $count = 2; #all tasks at least give 2 rewards
    $miscCount = 1;
    if ($taskid == 290) { # 5 kill
        $count = 2;
        $miscCount = 1;
    }
    if ($taskid == 291) { # 10 kill
        $count = 4;
        $miscCount = 1;
    }
    if ($taskid == 292) { # 15 kill
        $count = 6;
        $miscCount = 2;
    }
    if ($taskid == 293) { # 20 kill
        $count = 8;
        $miscCount = 3;
    }

    
    for my $i (0..$count) {
        if ($i == 0) {
            $itemid = ItemGenerate($client, 1, 0);
        } else {
            $itemid = ItemGenerate($client, 0, 0);
        }
        if ($itemid != 0) {
            $npc->AddItem($itemid);
        }
    }

    for my $i (0..$miscCount) {
        if ($i == 0) {
            $itemid = ItemGenerate($client, 1, 1);
        } else {
            $itemid = ItemGenerate($client, 0, 1);
        }
        if ($itemid != 0) {
            $npc->AddItem($itemid);
        }
    }
}

sub ItemGenerate {
    $client = shift;
    $isSlotRequired = shift;
    $isMiscStuff = shift;
    $class = $client->GetClass();
    $race = $client->GetBaseRace();

     my %classes = (
        1 => 1, #"Warrior" => 1,
        2 => 2, #"Cleric" => 2,
        3 => 4, #"Paladin" => 4,
        4 => 8, #"Ranger" => 8,
        5 => 16, #"Shadowknight" => 16,
        6 => 32, #"Druid" => 32,
        7 => 64, #"Monk" => 64,
        8 => 128, #"Bard" => 128,
        9 => 256, #"Rogue" => 256,
        10 => 512, #"Shaman" => 512,
        11 => 1024, #"Necromancer" => 1024,
        12 => 2048, #"Wizard" => 2048,
        13 => 4096, #"Magician" => 4096,
        14 => 8192, #"Enchanter" => 8192,
        15 => 16384, #"Beastlord" => 16384,
        16 => 32768, #"Berserker" => 32768,
    );
    
    my %races = (
        1 => 1, #"Human"
        2 => 2, #"Barbarian"
        3 => 4, #"Erudite"
        4 => 8, #"Wood Elf"
        5 => 16, #"High Elf"
        6 => 32, #"Dark Elf"
        7 => 64, #"Half Elf"
        8 => 128, #"Dwarf"
        9 => 256, #"Troll"
        10 => 512, #"Ogre"
        11 => 1024, #"Halfling"
        12 => 2048, #"Gnome"
        13 => 4096, #"Iksar"
        14 => 8192, #"Vah Shir"
        15 => 16384, #"Froglok"
        16 => 32768, #"Drakkin"
    );

    my @items;

    # RoF
    if ($client->GetLevel() >= 90 && $client->GetLevel() <= 100) {
        foreach my $id (133406, 76435, 77401, 81204, 81168, 134171, 134215, 134182, 134164, 134168, 134174, 134185, 134309, 134083, 134189, 134226, 134208, 134212, 134218, 134229, 134313, 134259, 134233, 134094, 134076, 134080, 134086, 134097, 134301, 134127, 134101, 134177, 134180, 134202, 134270, 134252, 134256, 134262, 134273, 134317, 134277, 134221, 134224, 134246, 134138, 134120, 134124, 134130, 134141, 134305, 134039, 134145, 134188, 134089, 134092, 134114, 134265, 134268, 134290, 134050, 134232, 134032, 134036, 134042, 134053, 134297, 133995, 134057, 113797, 134133, 134136, 134158, 134170, 134186, 134310, 134100, 134192, 134195, 113795, 134006, 134214, 134230, 134276, 134314, 133988, 133992, 133998, 134009, 134160, 134198, 134293, 134013, 134045, 134048, 134070, 134161, 134163, 134173, 134193, 134196, 134199, 113792, 134082, 134098, 134144, 134236, 134239, 134302, 134204, 134242, 134166, 134176, 134179, 134183, 134184, 134190, 134201, 134308, 134205, 134207, 134217, 134237, 134240, 134243, 113796, 134104, 134107, 134258, 134274, 134318, 134072, 134110, 134001, 134004, 134026, 134056, 134210, 134220, 134223, 134227, 134228, 134234, 134245, 134312, 113791, 134073, 134075, 134085, 134105, 134108, 134111, 134126, 134142, 134280, 134283, 134306, 134248, 134286, 134169, 134078, 134088, 134091, 134095, 134096, 134102, 134113, 134187, 134300, 134311, 134148, 134151, 134249, 134251, 134261, 134281, 134284, 134287, 134165, 134167, 134181, 134116, 134154, 134213, 134172, 134175, 134200, 134203, 134012, 113794, 134038, 134054, 134298, 134117, 134119, 134129, 134149, 134152, 134155, 134254, 134264, 134267, 134271, 134272, 134278, 134289, 134316, 134231, 134315, 134209, 134211, 134225, 134178, 134081, 134216, 134219, 134244, 134247, 134060, 134063, 134122, 134132, 134135, 134139, 134140, 134146, 134157, 134304, 134099, 134303, 134077, 134079, 134093, 134028, 134066, 134222, 134257, 113793, 133994, 134010, 134084, 134087, 134112, 134115, 134294, 134029, 134031, 134041, 134061, 134064, 134067, 134275, 134319, 134253, 134255, 134269, 134090, 134125, 134191, 134194, 134197, 134260, 134263, 134288, 134291, 134016, 134019, 134034, 134044, 134047, 134051, 134052, 134058, 134069, 134296, 134143, 134307, 133984, 134022, 134121, 134123, 134137, 134162, 134266, 134235, 134238, 134241, 133985, 133987, 133997, 134017, 134020, 134023, 134128, 134131, 134156, 134159, 134134, 134037, 134206, 134103, 134106, 134109, 133990, 134000, 134003, 134007, 134008, 134014, 134025, 134292, 134055, 134299, 134033, 134035, 134049, 134074, 134279, 134282, 134285, 134040, 134043, 134068, 134071, 133993, 134046, 134250, 134147, 134150, 134153, 134011, 134295, 133989, 133991, 134005, 134118, 133996, 133999, 134024, 134027, 134002, 134059, 134062, 134065, 134030, 134015, 134018, 134021, 133986, 133918, 133919, 133920, 133921, 132687, 133911, 133904, 133922, 132688, 132694, 133897, 133912, 133905, 132680, 132689, 132695, 132724, 133898, 133913, 132557, 133906, 133923, 132690, 132645, 132681, 132696, 132556, 133899, 133946, 133914, 133907, 132691, 132697, 132617, 132646, 132673, 132682, 132701, 132723, 133900, 133947, 133915, 133908, 132552, 132553, 133924, 132698, 132683, 132618, 132647, 132674, 132702, 134334, 134335, 134336, 134337, 134338, 134339, 134340, 134372, 133901, 132782, 132783, 133948, 132692, 132648, 132659, 132666, 132684, 132708, 132725, 132619, 132675, 132703, 133037, 133949, 133916, 133909, 132699, 132631, 132652, 132715, 132649, 132660, 132667, 132709, 133939, 134341, 134342, 134343, 134344, 134345, 134346, 134347, 134348, 134349, 134350, 134351, 134352, 134353, 134354, 134355, 134373, 132620, 132676, 132704, 133932, 133038, 133044, 133902, 133950, 133925, 132693, 132685, 132632, 132653, 132716, 132621, 132661, 132668, 132677, 132705, 132710, 133940, 133039, 133030, 133045, 133074, 133933, 133917, 139217, 133926, 132700, 133910, 132624, 132638, 132722, 132650, 132633, 132654, 132662, 132669, 132711, 132717, 132907, 133941, 133040, 132555, 132995, 133031, 133046, 133934, 133903, 132906, 133951, 139218, 139224, 132610, 132686, 133927, 132625, 132639, 132622, 132678, 132706, 132634, 132655, 132663, 132670, 132712, 132718, 133942, 133041, 133047, 132967, 132996, 133023, 133032, 133051, 133073, 133935, 134356, 134357, 134358, 134359, 134360, 134361, 134362, 134363, 134364, 134365, 134366, 134367, 134368, 134369, 134370, 134374, 134321, 134322, 134323, 134324, 134325, 134326, 134327, 134328, 134329, 134330, 134331, 134332, 134333, 134371, 139219, 139225, 139210, 139254, 132611, 132651, 133928, 132626, 132640, 132635, 132656, 132719, 132902, 132903, 133943, 133048, 132968, 132997, 133024, 133033, 133052, 133936, 133952, 133132, 133133, 139220, 139175, 139211, 139226, 132612, 132623, 132679, 132707, 133929, 139086, 132627, 132641, 132664, 132671, 132713, 117212, 133042, 133009, 133016, 133034, 133058, 133075, 132969, 132998, 133025, 133053, 139221, 139227, 139147, 139176, 139203, 139212, 139231, 139253, 132613, 132628, 132636, 132642, 132657, 132720, 117213, 117219, 133049, 133944, 132981, 133002, 133065, 132970, 132999, 133010, 133017, 133026, 133054, 133059, 133937, 139082, 139083, 139228, 139148, 139177, 139204, 139213, 139232, 132614, 132665, 132672, 132714, 133930, 117214, 117205, 117220, 117249, 133043, 139342, 117086, 133035, 132982, 133003, 133066, 132971, 133011, 133018, 133027, 133055, 133060, 117305, 117325, 139222, 139189, 139196, 139214, 139238, 139255, 132637, 132658, 132721, 139149, 139178, 139205, 139233, 132629, 132643, 117215, 117170, 117206, 117221, 133050, 117001, 117053, 132974, 132988, 133072, 133000, 133945, 132983, 133004, 133012, 133019, 133061, 133067, 139320, 139340, 133938, 132865, 132883, 132896, 132905, 133168, 117252, 117274, 117284, 117304, 117324, 139229, 132615, 139161, 139182, 139245, 139150, 139179, 139190, 139197, 139206, 139234, 139239, 139037, 139047, 133931, 117216, 133080, 133095, 133101, 133107, 133113, 133126, 117222, 117142, 117171, 117198, 117207, 117226, 117248, 132960, 133036, 117025, 117045, 117085, 132975, 132989, 132972, 133028, 133056, 132984, 133005, 133013, 133020, 133062, 133068, 139265, 139287, 139288, 139297, 139307, 139317, 139318, 139337, 139338, 139223, 117254, 117286, 117296, 117306, 117326, 139215, 132630, 132644, 139151, 139162, 139183, 139191, 139198, 139207, 139235, 139240, 139246, 117082, 117223, 117143, 117172, 117199, 117208, 117227, 132961, 133001, 132976, 132990, 132985, 133006, 133069, 117334, 139230, 132616, 139154, 139168, 139252, 139180, 139163, 139184, 139247, 139192, 139199, 139241, 117217, 81164, 117184, 117191, 117209, 117233, 117250, 139000, 139042, 139085, 117144, 117173, 117200, 117228, 117029, 117036, 117046, 117056, 132962, 132973, 133029, 133057, 132977, 132991, 133014, 133021, 133063, 139260, 139282, 139292, 139302, 139312, 139332, 117255, 117258, 117259, 117271, 117277, 117280, 117281, 117287, 117290, 117291, 117297, 117300, 117301, 117321, 117330, 117331, 139140, 139216, 139155, 139169, 139152, 139208, 139236, 139164, 139185, 139193, 139200, 139242, 139248, 132810, 133159, 117224, 117156, 117240, 117174, 117185, 117192, 117234, 117145, 117201, 117229, 117005, 117067, 117078, 132963, 132978, 132986, 132992, 133007, 133070, 117256, 117257, 117268, 117269, 117278, 117288, 117289, 117298, 117299, 117308, 117309, 117318, 117319, 117328, 117329, 132809, 133158, 139141, 139181, 139170, 139165, 139186, 139249, 117218, 117210, 117157, 117241, 117146, 117186, 117193, 117202, 117230, 117235, 132964, 133015, 133022, 133064, 132811, 133160, 139142, 139153, 139209, 139237, 139157, 139171, 139194, 139201, 139243, 117225, 117149, 117163, 117247, 117175, 117158, 117179, 117242, 117187, 117194, 117236, 132987, 133008, 133071, 132979, 132993, 117032, 117084, 139143, 139158, 139172, 139166, 139187, 139250, 117251, 117262, 117273, 117283, 117293, 117313, 117323, 117135, 117211, 117150, 117164, 117147, 117203, 117231, 117159, 117180, 117188, 117195, 117237, 117243, 132965, 132812, 132815, 133161, 133164, 135617, 135618, 139144, 139195, 139202, 139244, 117136, 117176, 117151, 117165, 117160, 117181, 117244, 132980, 132994, 132813, 132814, 133162, 133163, 139159, 139167, 139173, 139188, 139251, 117137, 117148, 117204, 117232, 132966, 117152, 117166, 117189, 117196, 117238, 81166, 139145, 117138, 117153, 117167, 117161, 117182, 117245, 139160, 139174, 132807, 132808, 133157, 117139, 117190, 117197, 117239, 139146, 117154, 117162, 117168, 117183, 117246, 117140, 133367, 117155, 117169, 133368, 133374, 117141, 133369, 133360, 133375, 133404, 75858, 75883, 75887, 75890, 75893, 75899, 75905, 133202, 133211, 133217, 133223, 133229, 133235, 133241, 133248, 133370, 133376, 133325, 133361, 75884, 75900, 133201, 133210, 133216, 133222, 133228, 133234, 133240, 133247, 133256, 75862, 75864, 133371, 133377, 133297, 133326, 133353, 133362, 133381, 133403, 75891, 75894, 75901, 75904, 75908, 133203, 133207, 133212, 133218, 133224, 133230, 133236, 133242, 133249, 75867, 133252, 133253, 133378, 133298, 133327, 133354, 133363, 133382, 133372, 133339, 133346, 133364, 133388, 133405, 75865, 133299, 133328, 133355, 133383, 75885, 75888, 75892, 75897, 75902, 133204, 133213, 133219, 133225, 133231, 133237, 133243, 133250, 133667, 75874, 133379, 75859, 75860, 133311, 133332, 133395, 75861, 133329, 133340, 133347, 133389, 75872, 133300, 133356, 133384, 75895, 75896, 75898, 75903, 133205, 133206, 133214, 133220, 133226, 133232, 133238, 133244, 133245, 133251, 133668, 133674, 133373, 133365, 75863, 133312, 133333, 133396, 133301, 133341, 133348, 133357, 133385, 133390, 75877, 133669, 133675, 133660, 133704, 75955, 133502, 133511, 133517, 133523, 133529, 133535, 133541, 133548, 139598, 133380, 133304, 133318, 133402, 75879, 133330, 75866, 133313, 133334, 133397, 75868, 75869, 75873, 133342, 133349, 133391, 133670, 133676, 75886, 75889, 75906, 75907, 133200, 133208, 133209, 133215, 133221, 133227, 133233, 133239, 133246, 133255, 133625, 133661, 75947, 133501, 133510, 133516, 133522, 133528, 133534, 133540, 133547, 133556, 139599, 139605, 133290, 133366, 133305, 133319, 133302, 133358, 133386, 75870, 75876, 133314, 133335, 133343, 133350, 133392, 133398, 75881, 133671, 133677, 133597, 133626, 133653, 133662, 133681, 133703, 75950, 133503, 133507, 133512, 133518, 133524, 133530, 133536, 133542, 133549, 139600, 139591, 139606, 139635, 133291, 133331, 133306, 133320, 133315, 133336, 133399, 133552, 133553, 139402, 139413, 139422, 139431, 139440, 139449, 139458, 139467, 133678, 133663, 133598, 133627, 133654, 133682, 139601, 139556, 139592, 139607, 133292, 133303, 133359, 133387, 133307, 133321, 139401, 139412, 139421, 139430, 139439, 139448, 139457, 139466, 139477, 75880, 133344, 133351, 133393, 117537, 133672, 75871, 133628, 133639, 133646, 133664, 133688, 133705, 133599, 133655, 133683, 75948, 75951, 133504, 133513, 133519, 133525, 133531, 133537, 133543, 133550, 135619, 135620, 135622, 135623, 135625, 135626, 135628, 135629, 135631, 135632, 135634, 135635, 135636, 135637, 135639, 135640, 139602, 139608, 139528, 139584, 139593, 139612, 139634, 139557, 133293, 133308, 133316, 133322, 133337, 133400, 139403, 139409, 139414, 139423, 139432, 139441, 139450, 139459, 139468, 117538, 117544, 75875, 133679, 133611, 133632, 133695, 75939, 133629, 133640, 133647, 133689, 75949, 75952, 133505, 133506, 133514, 133520, 133526, 133532, 133538, 133544, 133545, 133551, 133600, 133656, 133684, 135621, 135624, 135627, 135630, 135633, 135638, 139474, 139475, 139609, 139594, 133294, 133345, 133352, 133394, 139529, 139558, 139585, 139613, 117539, 75945, 117530, 117545, 117574, 133673, 117428, 133665, 133601, 133612, 133633, 133641, 133648, 133657, 133685, 133690, 133696, 117352, 117363, 117372, 117381, 117390, 117399, 117408, 117417, 75942, 139603, 139570, 139577, 139595, 139619, 139636, 133317, 133338, 133401, 139530, 139559, 139586, 139614, 133309, 133323, 139404, 139407, 139408, 139415, 139418, 139419, 139424, 139427, 139428, 139433, 139436, 139437, 139442, 139445, 139446, 139451, 139454, 139455, 139460, 139463, 139464, 139469, 139472, 139473, 117540, 117495, 117546, 133680, 75878, 117351, 117362, 117371, 117380, 117389, 117398, 117407, 117416, 133604, 133618, 133702, 133630, 133613, 133634, 133697, 133642, 133649, 133691, 75953, 75954, 133500, 133508, 133509, 133515, 133521, 133527, 133533, 133539, 133546, 133555, 133706, 75946, 139610, 139542, 139563, 139626, 133295, 139560, 139571, 139578, 139620, 139531, 139587, 139615, 139405, 139406, 139416, 139417, 139425, 139426, 139434, 139435, 139443, 139444, 139452, 139453, 139461, 139462, 139470, 139471, 117541, 117547, 117467, 117523, 117532, 117551, 117573, 117496, 133590, 133666, 117353, 117359, 117364, 117373, 117382, 117391, 117400, 117409, 117418, 117427, 133605, 133619, 133602, 133658, 133686, 133614, 133635, 133643, 133650, 133692, 133698, 139604, 133310, 133324, 139596, 139543, 139564, 139627, 139532, 139572, 139579, 139588, 139616, 139621, 117424, 117425, 75882, 117548, 117533, 117468, 117497, 117552, 133591, 133631, 133606, 133620, 133615, 133636, 133699, 139611, 75944, 133296, 139535, 139549, 139633, 139561, 139544, 139565, 139628, 139573, 139580, 139622, 117542, 117509, 117516, 117534, 117558, 117575, 117469, 117498, 117525, 117553, 139400, 139410, 139411, 139420, 139429, 139438, 139447, 139456, 139465, 139476, 117354, 117357, 117358, 117365, 117368, 117369, 117374, 117377, 117378, 117383, 117386, 117387, 117392, 117395, 117396, 117401, 117404, 117405, 117410, 117413, 117414, 117419, 117422, 117423, 133592, 133603, 133659, 133687, 133607, 133621, 75940, 133644, 133651, 133693, 139521, 139597, 117447, 139536, 139550, 139533, 139589, 139617, 139545, 139566, 139574, 139581, 139623, 139629, 117549, 117481, 117502, 117565, 117499, 117510, 117517, 117559, 117470, 117526, 117554, 117355, 117356, 117366, 117367, 117375, 117376, 117384, 117385, 117393, 117394, 117402, 117403, 117411, 117412, 117420, 117421, 117436, 117449, 133593, 75941, 75943, 133608, 133616, 133622, 133637, 133700, 117446, 139522, 139562, 139537, 139551, 139546, 139567, 139630, 117543, 117535, 117482, 117503, 117566, 117471, 117511, 117518, 117527, 117555, 117560, 133594, 133645, 133652, 133694, 139523, 139534, 139590, 139618, 139538, 139552, 139575, 139582, 139624, 117550, 117474, 117488, 117572, 117500, 117483, 117504, 117567, 117512, 117519, 117561, 133609, 133617, 133623, 133638, 133701, 117350, 117360, 117361, 117370, 117379, 117388, 117397, 117406, 117415, 117426, 117453, 139524, 139539, 139547, 139553, 139568, 139631, 117460, 117536, 117475, 117489, 117430, 117472, 117528, 117556, 117484, 117505, 117513, 117520, 117562, 117568, 133595, 139525, 139576, 139583, 139625, 117461, 117501, 117476, 117490, 117485, 117506, 117569, 133610, 133624, 139548, 139569, 139632, 139540, 139554, 117462, 117473, 117529, 117557, 133596, 117477, 117491, 117514, 117521, 117563, 139526, 117463, 117478, 117492, 117486, 117507, 117570, 139541, 139555, 117464, 117515, 117522, 117564, 139527, 117479, 117487, 117493, 117508, 117571, 117465, 133437, 117480, 117494, 133438, 117466, 133436, 132597, 133431, 133427, 133435, 133439, 133433, 133434, 133440, 132596, 132593, 133429, 133432, 133441, 132591, 132592, 133428, 133430, 132952, 133426, 139126, 132951, 132946, 132944, 132947, 132945, 133167, 139127, 139123, 139124, 139125, 117120, 117125, 117126, 133280, 75936, 133279, 133274, 75921, 133273, 133275, 75919, 75935, 75938, 133276, 75920, 133582, 75960, 139497, 133579, 133574, 133573, 133575, 75958, 133576, 139496, 139493, 139494, 139495, 117445, 117450, 117451) {
            push(@items, $id);
        }
    }

    # VoA
    if ($client->GetLevel() >= 85 && $client->GetLevel() <= 95) {
        foreach my $id (122733, 129533, 129333, 129133, 128933, 128613, 128213, 128094, 127813, 127692, 127413, 127292, 112085, 112094, 112107, 112110, 112258, 129425, 129220, 129010, 128810, 128711, 128431, 128708, 128428, 128308, 128028, 128306, 128026, 127897, 127617, 127896, 127616, 127496, 127216, 127495, 127215, 129447, 129446, 129448, 129238, 129239, 129237, 129020, 129021, 128821, 128820, 128736, 128735, 128456, 128455, 112307, 112308, 112309, 112310, 112311, 112312, 112313, 112314, 112315, 112316, 112317, 112318, 112319, 112320, 112321, 112325, 128737, 128457, 128331, 128051, 128330, 128050, 128332, 128052, 127912, 127632, 127911, 127631, 127511, 127231, 127510, 127230, 120378, 120397, 129535, 129335, 129135, 128935, 128615, 128215, 128096, 127815, 127694, 127294, 127415, 111953, 111962, 111975, 111978, 112246, 129402, 129406, 129400, 129202, 129200, 129001, 129000, 128801, 128800, 128688, 128408, 128683, 128681, 128403, 128401, 128680, 128400, 128687, 128407, 128287, 128007, 128282, 128002, 128281, 128001, 128280, 128000, 128285, 128005, 127882, 127602, 127881, 127601, 127880, 127885, 127600, 127605, 127481, 127201, 127480, 127484, 127200, 127204, 129410, 129413, 129207, 129210, 129004, 128804, 128692, 128412, 128697, 128417, 128693, 128413, 128295, 128015, 128291, 128011, 127889, 127609, 127887, 127607, 127488, 127208, 127486, 127206, 129531, 129331, 129131, 128931, 128611, 128211, 128092, 127811, 127690, 127411, 127290, 112041, 112050, 112063, 112066, 112254, 129436, 129435, 129437, 129227, 129229, 129228, 129014, 129015, 128814, 128815, 128728, 128724, 128448, 128721, 128729, 128444, 128441, 128722, 128449, 128442, 128720, 128440, 128320, 128324, 128317, 128040, 128044, 128037, 128318, 128038, 128316, 128036, 127905, 127625, 127902, 127903, 127622, 127623, 127504, 127224, 127502, 127501, 127222, 127221, 129530, 129330, 129130, 128930, 128610, 128210, 128091, 127810, 127410, 112173, 112182, 112195, 112198, 112266, 129532, 129332, 129132, 128932, 128612, 128093, 128212, 127691, 127812, 127291, 127412, 112270, 112217, 112226, 112239, 112242, 129534, 129334, 129134, 128614, 128934, 128214, 128095, 127814, 127693, 127414, 127293, 111997, 112006, 112019, 112022, 112250, 129415, 129212, 129006, 128806, 128498, 128699, 128419, 128297, 128017, 128296, 128016, 128299, 128019, 127890, 127610, 127891, 127611, 127489, 127209, 127490, 127210, 129430, 129223, 129012, 128812, 128716, 128436, 128714, 128434, 128312, 128032, 127900, 127620, 127899, 127619, 54766, 127499, 127219, 127498, 127218, 129454, 129449, 129451, 129244, 129241, 129240, 129022, 128822, 128461, 128463, 128460, 128462, 128061, 128063, 128060, 128062, 127660, 127662, 127661, 127260, 127262, 127261, 129423, 129420, 129218, 129216, 129008, 128808, 128702, 128422, 128703, 128423, 128704, 128424, 128301, 128021, 128302, 128022, 127893, 127613, 127894, 127614, 127492, 127212, 127493, 127213, 129443, 129234, 129018, 128818, 128732, 128452, 128730, 128450, 128328, 128048, 128104, 128325, 128045, 127909, 127629, 127908, 127628, 127508, 127228, 127507, 127227, 129529, 129329, 129129, 128929, 128609, 128090, 128209, 127809, 127409, 112129, 112138, 112151, 112154, 112262, 129458, 129467, 129468, 129457, 129462, 129459, 129463, 129582, 129382, 129182, 128662, 128982, 128262, 127862, 127462, 112097, 112068, 112100, 112103, 112106, 112109, 129428, 129222, 128709, 128429, 129584, 129384, 129184, 128984, 128664, 128264, 127864, 127464, 111965, 111936, 111968, 111971, 111974, 111977, 129407, 129408, 129206, 129003, 128686, 128406, 128691, 128411, 128284, 128004, 128290, 128010, 127884, 127604, 127483, 128695, 128415, 128293, 128013, 127888, 127608, 127487, 127207, 129580, 129380, 129180, 128980, 128660, 128260, 127860, 127460, 112053, 112024, 112056, 112059, 112062, 112065, 129440, 129441, 129232, 128726, 128446, 128723, 128443, 128322, 128042, 128319, 128039, 127907, 127627, 127904, 127624, 127506, 127226, 127503, 127223, 129579, 129379, 129179, 128979, 128659, 128259, 127859, 127459, 112185, 112156, 112188, 112191, 112194, 112197, 129581, 129381, 129181, 128981, 128661, 128261, 127861, 127461, 112229, 112200, 112232, 112235, 112238, 112241, 129583, 129383, 129183, 128983, 128663, 128263, 127863, 127463, 112009, 111980, 112012, 112015, 112018, 112021, 129418, 129214, 128497, 128298, 128018, 128718, 128715, 128438, 128435, 128314, 128311, 128034, 128031, 127901, 127621, 127500, 127220, 128706, 128426, 128304, 128024, 127895, 127615, 127494, 127214, 128103, 128327, 128047, 129578, 129595, 129378, 129395, 129178, 129195, 128978, 128995, 128658, 128675, 128258, 128275, 127858, 127875, 127458, 127475, 112141, 112112, 112144, 112147, 112150, 112153, 129471, 129272, 129063, 128862, 128529, 128128, 127724, 129476, 129475, 129589, 129389, 129189, 128989, 128669, 128269, 127869, 127469, 112067, 112099, 112102, 112105, 112073, 129424, 129219, 128710, 128430, 128307, 128027, 112272, 112273, 112274, 112275, 112276, 112277, 112278, 112279, 112280, 112281, 112282, 112283, 112284, 112322, 129591, 129391, 129191, 128991, 128671, 128271, 127871, 127471, 111935, 111941, 111967, 111970, 111973, 129401, 129201, 128689, 128409, 128682, 128402, 128288, 128008, 128286, 128006, 127886, 127606, 127485, 127205, 129409, 128694, 128414, 128292, 128012, 129587, 129387, 129187, 128987, 128667, 128267, 127867, 127467, 112023, 112029, 112055, 112058, 112061, 129434, 128727, 128447, 128323, 128043, 129586, 129386, 129186, 128986, 128666, 128266, 127866, 127466, 112155, 112161, 112187, 112190, 112193, 129588, 129388, 129188, 128988, 128668, 128268, 127868, 127468, 112199, 112205, 112231, 112234, 112237, 129590, 129390, 129190, 128990, 128670, 128270, 127870, 127470, 111979, 111985, 112011, 112014, 112017, 129414, 129211, 128493, 128698, 128418, 129429, 128717, 128437, 128313, 128033, 129419, 129215, 128705, 128425, 128303, 128023, 129442, 129233, 128731, 128451, 128099, 128326, 128046, 129585, 129385, 129185, 128985, 128665, 128265, 127865, 127465, 112111, 112117, 112143, 112146, 112149, 129473, 129470, 129270, 129062, 128861, 128530, 128528, 128129, 128127, 127722, 127723, 129491, 129291, 129091, 128891, 128571, 128171, 127771, 127371, 112072, 112074, 112079, 112082, 112088, 112076, 112090, 129427, 129221, 129011, 128811, 128713, 128433, 128310, 128030, 127898, 127618, 127497, 127217, 112292, 112293, 112294, 112295, 112296, 112297, 112298, 112299, 112300, 112301, 112302, 112303, 112304, 112305, 112306, 112324, 129493, 129293, 129093, 128893, 128573, 128173, 127773, 127373, 111940, 111942, 111947, 111950, 111956, 111944, 111958, 129403, 129405, 129203, 129205, 129002, 128803, 128802, 128685, 128405, 128283, 128003, 127883, 127603, 127203, 127482, 127202, 129412, 129209, 129005, 128805, 129489, 129289, 129089, 128889, 128569, 128169, 127769, 127369, 112028, 112030, 112035, 112038, 112044, 112032, 112046, 129439, 129230, 129231, 129016, 129017, 128816, 128817, 128725, 128445, 128321, 128041, 127906, 127626, 127505, 127225, 129488, 129288, 129088, 128888, 128568, 128168, 127768, 127368, 112160, 112162, 112167, 112170, 112176, 112164, 112178, 129490, 129290, 129090, 128890, 128570, 128170, 127770, 127370, 112204, 112206, 112211, 112214, 112220, 112208, 112222, 129492, 129292, 129092, 128892, 128572, 128172, 127772, 127372, 111984, 111986, 111991, 111994, 112000, 111988, 112002, 129417, 129213, 129007, 128496, 128807, 128701, 128421, 128300, 128020, 127892, 127612, 127491, 127211, 129432, 129225, 129013, 128813, 129453, 129243, 129023, 128823, 128465, 128065, 127663, 127263, 129422, 129217, 129009, 128809, 129444, 129235, 129019, 128819, 128734, 128454, 128102, 128329, 128049, 127910, 127630, 127509, 127229, 129487, 129287, 129087, 128887, 128567, 128167, 127767, 127367, 112116, 112118, 112123, 112126, 112132, 112120, 112134, 128532, 128131, 129466, 129465, 129519, 129319, 129119, 128599, 128919, 128199, 127799, 127399, 112093, 112257, 112084, 112087, 129521, 129321, 129121, 128921, 128601, 128201, 127801, 127401, 111961, 112245, 111952, 111955, 129517, 129317, 129117, 128917, 128597, 128197, 127797, 127397, 112049, 112253, 112040, 112043, 129516, 129316, 129116, 128916, 128596, 128196, 127796, 127396, 112181, 112265, 112172, 112175, 129518, 129318, 129118, 128918, 128598, 128198, 127798, 127398, 112225, 112269, 112216, 112219, 129520, 129320, 129120, 128920, 128600, 128200, 127800, 127400, 112005, 112249, 111996, 111999, 128500, 128106, 129515, 129315, 129115, 128915, 128595, 128195, 127795, 127395, 112137, 112261, 112128, 112131, 129575, 129375, 129175, 128975, 128655, 128255, 127855, 127455, 112071, 112075, 112081, 112092, 112256, 112089, 129426, 128712, 128432, 128309, 128029, 112285, 112286, 112287, 112288, 112289, 112290, 112291, 112323, 129577, 129377, 129177, 128977, 128657, 128257, 127857, 127457, 111939, 111943, 111949, 111957, 111960, 112244, 129404, 129204, 128684, 128404, 129411, 129208, 128696, 128416, 128294, 128014, 129573, 129373, 129173, 128973, 128653, 128253, 127853, 127453, 112027, 112031, 112037, 112045, 112048, 112252, 129438, 129572, 129372, 129172, 128972, 128652, 128252, 127852, 127452, 112159, 112163, 112169, 112177, 112180, 112264, 129574, 129374, 129174, 128974, 128654, 128254, 127854, 127454, 112203, 112207, 112213, 112221, 112224, 112268, 129576, 129376, 129176, 128976, 128656, 128256, 127856, 127456, 111983, 111987, 111993, 112001, 112004, 112248, 129416, 128700, 128420, 129431, 129224, 128719, 128439, 128315, 128035, 129452, 129242, 128464, 128064, 129421, 128707, 128427, 128305, 128025, 129445, 129236, 128733, 128453, 129571, 129371, 129171, 128971, 128651, 128251, 127851, 127451, 112115, 112119, 112125, 112133, 112136, 112260, 129472, 129273, 128531, 128130, 127726, 129464, 129568, 129368, 129168, 128968, 128648, 128248, 127848, 127448, 129570, 129370, 129170, 128970, 128650, 128250, 127850, 127450, 129566, 129366, 129166, 128966, 128646, 128246, 127846, 127446, 129565, 129365, 129165, 128965, 128645, 128245, 127845, 127445, 129567, 129367, 129167, 128967, 128647, 128247, 127847, 127447, 129569, 129369, 129169, 128969, 128649, 128249, 127849, 127449, 128495, 128101, 129564, 129364, 129164, 128964, 128644, 128244, 127844, 127444, 129526, 129326, 129126, 128926, 128606, 128206, 127806, 127406, 113784, 129528, 129328, 129128, 128928, 128608, 128208, 127808, 127408, 113786, 129524, 129324, 129124, 128924, 128604, 128204, 127804, 127404, 113785, 129523, 129323, 129123, 128923, 128603, 128203, 127803, 127403, 113788, 129525, 129325, 129125, 128925, 128605, 128205, 127805, 127405, 113789, 129527, 129327, 129127, 128927, 128607, 128207, 127807, 127407, 113787, 129450, 129522, 129322, 129122, 128922, 128602, 128202, 127802, 127402, 113790, 129554, 129354, 129154, 128954, 128634, 128234, 127834, 127434, 112078, 112096, 129556, 129356, 129156, 128956, 128636, 128236, 127836, 127436, 111946, 111964, 129552, 129352, 129152, 128952, 128632, 128232, 127832, 127432, 112034, 112052, 129551, 129351, 129151, 128951, 128631, 128231, 127831, 127431, 112166, 112184, 129553, 129353, 129153, 128953, 128633, 128233, 127833, 127433, 112210, 112228, 129555, 129355, 129155, 128955, 128635, 128235, 127835, 127435, 111990, 112008, 128499, 128490, 128097, 128105, 129550, 129594, 129350, 129394, 129150, 129194, 128950, 128994, 128630, 128674, 128230, 128274, 127830, 127874, 127430, 127474, 112122, 112140, 129498, 129298, 129098, 128898, 128578, 128178, 127778, 127378, 129500, 129300, 129100, 128900, 128580, 128180, 127780, 127380, 128690, 128410, 128289, 128009, 129496, 129296, 129096, 128896, 128576, 128176, 127776, 127376, 129495, 129295, 129095, 128895, 128575, 128175, 127775, 127375, 129497, 129297, 129097, 128897, 128577, 128177, 127777, 127377, 129499, 129299, 129099, 128899, 128579, 128179, 127779, 127379, 129433, 129226, 129494, 129294, 129094, 128894, 128574, 128174, 127774, 127374, 129474, 129271, 128526, 128125, 129505, 129305, 129105, 128905, 128585, 128185, 127785, 127385, 112083, 112086, 112091, 112108, 112255, 129507, 129307, 129107, 128907, 128587, 128187, 127787, 127387, 111951, 111954, 111959, 111976, 112243, 129503, 129303, 129103, 128903, 128583, 128183, 127783, 127383, 112039, 112042, 112047, 112064, 112251, 129502, 129302, 129102, 128902, 128582, 128182, 127782, 127382, 112171, 112174, 112179, 112196, 112263, 129504, 129304, 129104, 128904, 128584, 128184, 127784, 127384, 112215, 112218, 112223, 112240, 112267, 129506, 129306, 129106, 128586, 128906, 128186, 127786, 127386, 111995, 111998, 112003, 112020, 112247, 129501, 129301, 129101, 128901, 128581, 128181, 127781, 127381, 112127, 112130, 112135, 112152, 112259, 129477, 129478, 129540, 129340, 129140, 128940, 128620, 128220, 127820, 127420, 112077, 112070, 112080, 129542, 129342, 129142, 128942, 128622, 128222, 127822, 127422, 111938, 111945, 111948, 129538, 129338, 129138, 128938, 128618, 128218, 127818, 127418, 112026, 112033, 112036, 129537, 129337, 129137, 128937, 128617, 128217, 127817, 127417, 112158, 112165, 112168, 129539, 129339, 129139, 128939, 128619, 128219, 127819, 127419, 112202, 112209, 112212, 129541, 129341, 129141, 128941, 128621, 128221, 127821, 127421, 111982, 111989, 111992, 128494, 128100, 129536, 129336, 129136, 128936, 128616, 128216, 127816, 127416, 112114, 112121, 112124, 129469, 129512, 129312, 129112, 128912, 128592, 128192, 127792, 127392, 112098, 112101, 112104, 129514, 129314, 129114, 128914, 128594, 128194, 127794, 127394, 111966, 111969, 111972, 129510, 129310, 129110, 128910, 128590, 128190, 127790, 127390, 112054, 112057, 112060, 129509, 129309, 129109, 128909, 128589, 128189, 127789, 127389, 112186, 112189, 112192, 129511, 129311, 129111, 128911, 128591, 128191, 127791, 127391, 112230, 112233, 112236, 129513, 129313, 129113, 128913, 128593, 128193, 127793, 127393, 112010, 112013, 112016, 129508, 129592, 129308, 129392, 129108, 129192, 128908, 128992, 128588, 128672, 128188, 128272, 127788, 127872, 127388, 127472, 112142, 112145, 112148, 128527, 128126, 127725, 129547, 129347, 129147, 128627, 128947, 128227, 127827, 127427, 112095, 129549, 129349, 129149, 128949, 128629, 128229, 127829, 127429, 111963, 129545, 129345, 129145, 128945, 128625, 128225, 127825, 127425, 112051, 129544, 129344, 129144, 128944, 128624, 128224, 127824, 127424, 112183, 129546, 129346, 129146, 128946, 128626, 128226, 127826, 127426, 112227, 129548, 129348, 129148, 128948, 128628, 128228, 127828, 127428, 112007, 129543, 129593, 129343, 129393, 129143, 129193, 128943, 128993, 128623, 128673, 128223, 128273, 127823, 127873, 127423, 127473, 112139, 129484, 129284, 129084, 128884, 128564, 128164, 127764, 127364, 112069, 129486, 129286, 129086, 128886, 128566, 128166, 127766, 127366, 111937, 129482, 129282, 129082, 128882, 128562, 128162, 127762, 127362, 112025, 129481, 129281, 129081, 128881, 128561, 128161, 127761, 127361, 112157, 129483, 129283, 129083, 128883, 128563, 128163, 127763, 127363, 112201, 129485, 129285, 129085, 128885, 128565, 128165, 127765, 127365, 111981, 129480, 129280, 129080, 128880, 128560, 128160, 127760, 127360, 112113, 129460, 129561, 129361, 129161, 128961, 128641, 128241, 127841, 127441, 129563, 129363, 129163, 128963, 128643, 128243, 127843, 127443, 129559, 129359, 129159, 128959, 128639, 128239, 127839, 127439, 129558, 129358, 129158, 128958, 128638, 128238, 127838, 127438, 129560, 129360, 129160, 128960, 128640, 128240, 127840, 127440, 129562, 129362, 129162, 128962, 128642, 128242, 127842, 127442, 129557, 129357, 129157, 128957, 128637, 128237, 127837, 127437) {
            push(@items, $id);
        }
    }

    # HoT
    if ($client->GetLevel() >= 80 && $client->GetLevel() <= 90) {
        foreach my $id (122715, 122760, 122761, 122434, 122468, 122751, 122772, 122407, 122464, 122481, 122493, 122549, 122687, 122743, 122766, 122767, 122793, 122476, 122541, 122716, 122459, 122463, 122584, 122665, 122460, 122506, 122527, 122534, 122590, 122768, 122496, 122497, 122498, 122510, 122511, 122512, 122762, 122469, 122752, 122773, 122605, 122458, 122482, 122753, 122754, 122774, 122775, 122603, 122604, 122638, 122688, 122744, 122778, 122795, 122483, 122484, 122717, 122649, 122621, 122542, 122718, 122461, 122612, 122736, 122769, 122608, 122499, 122513, 122719, 122628, 122653, 122635, 122647, 122462, 122701, 122722, 122729, 122755, 122776, 122779, 122785, 122611, 122639, 122507, 122528, 122535, 122591, 122618, 122632, 122737, 122763, 122666, 122623, 122616, 122619, 122640, 122485, 122689, 122690, 122691, 122745, 122746, 122747, 122650, 122667, 122626, 122631, 122637, 122654, 122622, 122641, 122617, 122636, 122645, 122627, 122780, 122781, 122782, 120972, 122607, 122625, 122642, 122615, 122702, 122720, 122723, 122730, 122786, 122624, 122644, 122646, 122738, 122739, 122770, 122634, 122600, 122500, 122514, 122602, 122630, 122692, 122694, 122708, 122748, 122792, 122606, 122601, 122610, 122652, 122756, 122777, 122648, 122620, 122651, 122633, 122614, 122655, 122740, 122613, 122783, 122486, 122680, 122676, 122629, 122695, 122703, 122704, 122709, 122721, 122724, 122725, 122731, 122732, 122787, 122788, 122670, 122643, 122705, 122726, 122733, 122789, 122677, 122693, 122749, 122658, 120968, 122681, 122609, 122741, 122784, 122662, 122678, 122660, 122659, 122706, 122727, 122734, 122790, 122668, 122664, 122696, 122697, 122698, 122710, 122711, 122712, 122663, 122669, 122682, 120966, 122683, 122684, 122742, 120970, 122699, 122713, 120969, 120967, 122661, 122707, 122728, 122735, 122791, 122685, 120971, 122700, 122714, 122686, 121373, 121369, 121368, 121371, 121367, 121370, 121372, 122062, 122063, 122269, 122270, 122268, 122471, 122473, 122472, 122474, 122675, 122671, 122674, 122672, 122673) {
            push(@items, $id);
        }
    }

    # UF
    if ($client->GetLevel() >= 75 && $client->GetLevel() <= 85) {
        foreach my $id (111382, 111484, 111751, 111760, 111761, 111772, 111815, 111827, 111383, 111384, 111687, 111743, 111793, 111813, 111816, 111884, 111716, 111766, 111767, 111822, 111866, 109745, 111442, 111768, 111810, 111811, 111868, 111874, 111399, 111413, 111778, 111795, 111876, 111878, 111688, 111744, 111752, 111753, 111754, 111762, 111773, 111774, 111775, 111871, 111650, 109240, 111385, 111407, 111428, 111435, 111491, 111717, 111736, 111865, 111875, 111611, 110292, 111718, 111651, 111659, 111701, 111719, 111722, 111729, 111769, 111779, 111785, 111635, 111645, 111647, 111641, 111614, 111624, 111633, 111653, 111638, 111737, 111755, 111776, 111606, 111657, 111607, 111627, 111689, 111690, 111691, 111745, 111746, 111747, 111604, 111619, 111616, 111622, 111601, 111636, 111837, 110291, 111400, 111414, 111630, 111763, 111626, 111631, 111602, 111386, 111643, 111702, 111723, 111730, 111780, 111781, 111782, 111786, 111600, 111610, 111646, 111658, 111615, 111605, 111694, 111708, 111720, 111792, 111618, 111613, 111625, 111623, 111640, 111738, 111739, 111608, 111628, 111642, 111644, 111692, 111748, 111770, 111617, 111621, 111637, 111649, 111634, 111652, 111656, 111740, 111639, 111612, 111654, 111632, 111629, 111680, 111756, 111777, 111603, 111648, 111609, 111835, 111620, 111695, 111709, 111783, 111838, 111703, 111704, 111705, 111724, 111725, 111726, 111731, 111732, 111733, 111787, 111788, 111789, 111660, 111839, 111655, 111681, 111721, 111836, 111741, 111693, 111749, 111696, 111697, 111698, 111706, 111710, 111711, 111712, 111727, 111734, 111790, 110794, 47828, 111784, 111682, 111683, 111684, 109740, 111742, 111699, 111713, 111707, 111728, 111735, 111791, 111685, 110739, 110745, 110734, 110744, 47827, 111700, 111714, 111686, 47826, 47829, 110240, 110294, 110295, 110740, 111220, 111225, 111226, 111214, 111520, 111525, 111526, 111514, 111221, 111814, 111825, 111826, 111820, 111867, 111872, 111877, 111882, 111873, 111883, 111870, 111521, 111880, 111821) {
            push(@items, $id);
        }
    }

    # SoD
    if ($client->GetLevel() >= 72 && $client->GetLevel() <= 82) {
        foreach my $id (104412, 104419, 104405, 104413, 104420, 106610, 104406, 106611, 105768, 105769, 104505, 104617, 104506, 104512, 104618, 104624, 105770, 56090, 104498, 104513, 104519, 104610, 104625, 104631, 105444, 105448, 106734, 106733, 106741, 104463, 104499, 104508, 104509, 104520, 104575, 104611, 104620, 104621, 104632, 106736, 106740, 104435, 104464, 104491, 104507, 104515, 104516, 104547, 104576, 104603, 104619, 104627, 104628, 105443, 105447, 106735, 106737, 104514, 104626, 106739, 106743, 56035, 104436, 104492, 104501, 104502, 104522, 104523, 104526, 104548, 104604, 104613, 104614, 104634, 104635, 104638, 105445, 105449, 106738, 106744, 106745, 56112, 104466, 104467, 104484, 104500, 104510, 104521, 104527, 104578, 104579, 104596, 104612, 104622, 104633, 104639, 106742, 106764, 56074, 106722, 106723, 106730, 56031, 56032, 56033, 56070, 56071, 104438, 104439, 104449, 104465, 104470, 104477, 104485, 104494, 104495, 104517, 104533, 104550, 104551, 104561, 104577, 104582, 104589, 104597, 104606, 104607, 104629, 104645, 106711, 106712, 106747, 56077, 56080, 56087, 56088, 56103, 56089, 106700, 106701, 106708, 106718, 106725, 106729, 106748, 56095, 56043, 56072, 56121, 56040, 56073, 104437, 104450, 104471, 104478, 104493, 104503, 104511, 104524, 104529, 104530, 104534, 104549, 104562, 104583, 104590, 104605, 104615, 104623, 104636, 104641, 104642, 104646, 106707, 106714, 106715, 106719, 106728, 106746, 106753, 56091, 56101, 56047, 56102, 56114, 104518, 104630, 106703, 106713, 106724, 106726, 106769, 56034, 56092, 56124, 104442, 104456, 104468, 104487, 104488, 104528, 104554, 104568, 104580, 104599, 104600, 104640, 105442, 105446, 106721, 106755, 56100, 56094, 104428, 104504, 104525, 104540, 104616, 104637, 106706, 106716, 106717, 106750, 106751, 106760, 106763, 56093, 56038, 56039, 56078, 104440, 104443, 104452, 104453, 104457, 104473, 104474, 104480, 104481, 104486, 104496, 104536, 104537, 104552, 104555, 104564, 104565, 104569, 104585, 104586, 104592, 104593, 104598, 104608, 104648, 104649, 106702, 106704, 106705, 106749, 106752, 106761, 56099, 56123, 56096, 56120, 56105, 56119, 104429, 104469, 104531, 104541, 104581, 104643, 106720, 106727, 106731, 106732, 106754, 106759, 106767, 56036, 56037, 56075, 56076, 56079, 104451, 104472, 104479, 104535, 104563, 104584, 104591, 104647, 104729, 104841, 104953, 106709, 106768, 56097, 56109, 56111, 56098, 56104, 56042, 56048, 104441, 104445, 104446, 104459, 104460, 104489, 104497, 104553, 104557, 104558, 104571, 104572, 104601, 104609, 106710, 56110, 56113, 56082, 56122, 104730, 104736, 104842, 104848, 104954, 104960, 56115, 56041, 104431, 104432, 104444, 104454, 104458, 104475, 104482, 104532, 104538, 104543, 104544, 104556, 104566, 104570, 104587, 104594, 104644, 104650, 106756, 56045, 56081, 56084, 104722, 104737, 104743, 104834, 104849, 104855, 104946, 104961, 104967, 105452, 105456, 105460, 106757, 104430, 104490, 104542, 104602, 106827, 104687, 104723, 104732, 104733, 104744, 104799, 104835, 104844, 104845, 104856, 104911, 104947, 104956, 104957, 104968, 56046, 56083, 104447, 104455, 104461, 104476, 104483, 104539, 104559, 104567, 104573, 104588, 104595, 104651, 106829, 106833, 104659, 104688, 104715, 104731, 104739, 104740, 104771, 104800, 104827, 104843, 104851, 104852, 104883, 104912, 104939, 104955, 104963, 104964, 105451, 105455, 105459, 56044, 104433, 104545, 106818, 106828, 106830, 106832, 106847, 104660, 104716, 104725, 104726, 104738, 104746, 104747, 104750, 104772, 104828, 104837, 104838, 104850, 104858, 104859, 104862, 104884, 104940, 104949, 104950, 104962, 104970, 104971, 104974, 105453, 105457, 105461, 106838, 104448, 104462, 104560, 104574, 106820, 106824, 106836, 106840, 106864, 107040, 50919, 104690, 104691, 104708, 104724, 104734, 104745, 104751, 104802, 104803, 104820, 104836, 104846, 104857, 104863, 104914, 104915, 104932, 104948, 104958, 104969, 104975, 105065, 105177, 105289, 105401, 105864, 106800, 106806, 106831, 106839, 107039, 104434, 104546, 105865, 106834, 106835, 106842, 107042, 107047, 50918, 50920, 104662, 104663, 104673, 104689, 104694, 104701, 104709, 104718, 104719, 104741, 104757, 104774, 104775, 104785, 104801, 104806, 104813, 104821, 104830, 104831, 104853, 104869, 104886, 104887, 104897, 104913, 104918, 104925, 104933, 104942, 104943, 104965, 104981, 105072, 105184, 105296, 105408, 106819, 106821, 106837, 106843, 106848, 106861, 107046, 104735, 104847, 104959, 105866, 106809, 106823, 106826, 106841, 106850, 107041, 107049, 104661, 104674, 104695, 104702, 104717, 104727, 104748, 104753, 104754, 104758, 104773, 104786, 104807, 104814, 104829, 104839, 104860, 104865, 104866, 104870, 104885, 104898, 104919, 104926, 104941, 104951, 104972, 104977, 104978, 104982, 105058, 105066, 105079, 105170, 105178, 105191, 105282, 105290, 105303, 105394, 105402, 105415, 105464, 105468, 105472, 105476, 106801, 106802, 106815, 106822, 106869, 107043, 106803, 106805, 106825, 106846, 106852, 50914, 104666, 104680, 104692, 104711, 104712, 104742, 104752, 104778, 104792, 104804, 104823, 104824, 104854, 104864, 104890, 104904, 104916, 104935, 104936, 104966, 104976, 105023, 105073, 105135, 105185, 105247, 105297, 105359, 105409, 105450, 105454, 105458, 106811, 106812, 106860, 107045, 106817, 106844, 106845, 106863, 104652, 104664, 104667, 104676, 104677, 104681, 104697, 104698, 104704, 104705, 104710, 104720, 104728, 104749, 104760, 104761, 104764, 104776, 104779, 104788, 104789, 104793, 104809, 104810, 104816, 104817, 104822, 104832, 104840, 104861, 104872, 104873, 104876, 104888, 104891, 104900, 104901, 104905, 104921, 104922, 104928, 104929, 104934, 104944, 104952, 104973, 104984, 104985, 104995, 105051, 105059, 105080, 105107, 105163, 105171, 105192, 105219, 105275, 105283, 105304, 105331, 105387, 105395, 105416, 105463, 105467, 105471, 105475, 106804, 106810, 106851, 107028, 107061, 50915, 106807, 106808, 106859, 107029, 107035, 107044, 107048, 54886, 104653, 104675, 104693, 104696, 104703, 104755, 104759, 104765, 104787, 104805, 104808, 104815, 104867, 104871, 104877, 104899, 104917, 104920, 104927, 104979, 104983, 105024, 105067, 105068, 105069, 105086, 105136, 105179, 105180, 105181, 105198, 105248, 105291, 105292, 105293, 105310, 105360, 105403, 105404, 105405, 105422, 105465, 105469, 105473, 105477, 106814, 106849, 106853, 106854, 106858, 106868, 107031, 54887, 106816, 54888, 104665, 104669, 104670, 104683, 104684, 104713, 104721, 104777, 104781, 104782, 104795, 104796, 104825, 104833, 104889, 104893, 104894, 104907, 104908, 104937, 104945, 104996, 105044, 105052, 105074, 105075, 105076, 105108, 105156, 105164, 105186, 105187, 105188, 105220, 105268, 105276, 105298, 105299, 105300, 105332, 105380, 105388, 105410, 105411, 105412, 106813, 106867, 107036, 107010, 104655, 104656, 104668, 104678, 104682, 104699, 104706, 104756, 104762, 104767, 104768, 104780, 104790, 104794, 104811, 104818, 104868, 104874, 104879, 104880, 104892, 104902, 104906, 104923, 104930, 104980, 104986, 105009, 105030, 105037, 105060, 105061, 105062, 105081, 105082, 105083, 105087, 105093, 105121, 105142, 105149, 105172, 105173, 105174, 105193, 105194, 105195, 105199, 105205, 105233, 105254, 105261, 105284, 105285, 105286, 105305, 105306, 105307, 105311, 105317, 105345, 105366, 105373, 105396, 105397, 105398, 105417, 105418, 105419, 105423, 105429, 107012, 107030, 107032, 107038, 107053, 106855, 107001, 107016, 107034, 107050, 107052, 107054, 107063, 104654, 104714, 104766, 104826, 104878, 104938, 105025, 105026, 105027, 105045, 105070, 105137, 105138, 105139, 105157, 105182, 105249, 105250, 105251, 105269, 105294, 105361, 105362, 105363, 105381, 105406, 107003, 107018, 107051, 107015, 107033, 107037, 107056, 104997, 104998, 104999, 105002, 105010, 105016, 105031, 105038, 105053, 105054, 105055, 105077, 105094, 105109, 105110, 105111, 105114, 105122, 105128, 105143, 105150, 105165, 105166, 105167, 105189, 105206, 105221, 105222, 105223, 105226, 105234, 105240, 105255, 105262, 105277, 105278, 105279, 105301, 105318, 105333, 105334, 105335, 105338, 105346, 105352, 105367, 105374, 105389, 105390, 105391, 105413, 105430, 105462, 105466, 105470, 105474, 106856, 107007, 107011, 107013, 104671, 104679, 104685, 104700, 104707, 104763, 104783, 104791, 104797, 104812, 104819, 104875, 104895, 104903, 104909, 104924, 104931, 104987, 107057, 104988, 105063, 105084, 105088, 105089, 105090, 105100, 105175, 105196, 105200, 105201, 105202, 105212, 105287, 105308, 105312, 105313, 105314, 105324, 105399, 105420, 105424, 105425, 105426, 107002, 107004, 107019, 107062, 104657, 104769, 104881, 107006, 107017, 107021, 107055, 107065, 105003, 105017, 105028, 105046, 105047, 105048, 105115, 105129, 105140, 105158, 105159, 105160, 105227, 105241, 105252, 105270, 105271, 105272, 105339, 105353, 105364, 105382, 105383, 105384, 107005, 107014, 107025, 104672, 104686, 104784, 104798, 104896, 104910, 105071, 105183, 105295, 105407, 107008, 107027, 107060, 107064, 104989, 105000, 105011, 105012, 105013, 105032, 105033, 105034, 105039, 105040, 105041, 105056, 105095, 105096, 105097, 105101, 105112, 105123, 105124, 105125, 105144, 105145, 105146, 105151, 105152, 105153, 105168, 105207, 105208, 105209, 105213, 105224, 105235, 105236, 105237, 105256, 105257, 105258, 105263, 105264, 105265, 105280, 105319, 105320, 105321, 105325, 105336, 105347, 105348, 105349, 105368, 105369, 105370, 105375, 105376, 105377, 105392, 105431, 105432, 105433, 107009, 107022, 107058, 107059, 104658, 104770, 104882, 107020, 105078, 105091, 105190, 105203, 105302, 105315, 105414, 105427, 107024, 107026, 105004, 105005, 105006, 105018, 105019, 105020, 105049, 105064, 105085, 105116, 105117, 105118, 105130, 105131, 105132, 105161, 105176, 105197, 105228, 105229, 105230, 105242, 105243, 105244, 105273, 105288, 105309, 105340, 105341, 105342, 105354, 105355, 105356, 105385, 105400, 105421, 107023, 104990, 104991, 104992, 105014, 105029, 105035, 105042, 105098, 105102, 105103, 105104, 105126, 105141, 105147, 105154, 105210, 105214, 105215, 105216, 105238, 105253, 105259, 105266, 105322, 105326, 105327, 105328, 105350, 105365, 105371, 105378, 105434, 105001, 105057, 105113, 105169, 105225, 105281, 105337, 105393, 105959, 105092, 105204, 105316, 105428, 105958, 105007, 105021, 105119, 105133, 105231, 105245, 105343, 105357, 105050, 105162, 105274, 105386, 104993, 105105, 105217, 105329, 105015, 105036, 105043, 105099, 105127, 105148, 105155, 105211, 105239, 105260, 105267, 105323, 105351, 105372, 105379, 105435, 105960, 106539, 106541, 106534, 105008, 105022, 105120, 105134, 105232, 105246, 105344, 105358, 104994, 105106, 105218, 105330, 106542, 106614, 56118, 56117, 106765, 106758, 106762, 56116, 56108, 106766, 106865, 106857, 106862, 106866) {
            push(@items, $id);
        }
    }

    # SoF
    if ($client->GetLevel() >= 70 && $client->GetLevel() <= 80) {
        foreach my $id (102045, 102059, 102089, 102104, 102125, 102210, 102218, 102231, 102298, 102609, 102665, 102666, 102031, 102069, 102046, 102054, 102060, 102075, 102082, 102138, 102175, 102219, 102225, 102611, 102032, 102041, 102097, 102147, 102203, 102297, 102616, 102639, 102640, 102641, 102642, 102651, 102047, 102061, 102132, 102211, 102226, 102232, 102652, 102176, 102212, 102233, 102238, 102299, 102547, 102549, 102590, 102606, 102625, 102634, 102635, 102636, 102637, 102645, 102646, 102647, 102648, 101340, 101344, 101346, 102033, 102090, 102597, 102618, 102055, 102076, 102083, 102139, 102148, 102177, 102196, 102204, 102220, 102595, 102630, 102149, 102161, 102182, 102189, 102205, 102221, 102227, 102239, 102245, 102602, 102605, 102607, 102608, 102610, 102613, 102623, 102643, 102644, 102048, 102062, 102197, 102213, 102228, 102234, 102240, 102667, 102154, 102162, 102168, 102178, 102183, 102190, 102198, 102214, 102222, 102235, 102246, 102296, 102592, 102612, 102614, 102615, 102617, 102627, 102034, 102140, 102150, 102163, 102179, 102184, 102191, 102206, 102229, 102247, 102599, 102620, 102632, 102633, 102155, 102169, 102215, 102236, 102151, 102207, 102241, 102591, 102593, 102594, 102596, 102626, 102628, 102629, 102631, 102141, 102156, 102170, 102180, 102199, 102242, 102598, 102600, 102601, 102603, 102619, 102621, 102622, 102624, 102223, 102142, 102152, 102164, 102185, 102192, 102200, 102208, 102248, 102165, 102186, 102193, 102230, 102243, 102249, 102157, 102171, 102201, 102216, 102237, 102181, 102143, 102158, 102166, 102172, 102187, 102194, 102250, 102144, 102153, 102209, 102159, 102173, 102244, 102202, 102145, 102167, 102188, 102195, 102251, 102160, 102174, 102146, 102580, 102583, 102587, 102659, 102653, 102658, 102663, 102664) {
            push(@items, $id);
        }
    }

    # TBS
    if ($client->GetLevel() >= 68 && $client->GetLevel() <= 78) {        
        foreach my $id (80500, 80501, 80507, 80508, 80514, 80515, 80521, 80522, 80528, 80529, 80535, 80536, 80542, 80543, 80549, 80550, 80556, 80557, 80563, 80564, 80570, 80571, 80577, 80578, 80584, 80585, 80591, 80592, 80598, 80599, 80605, 80606, 80613, 80617, 80618, 80619, 80620, 80621, 80622, 80623, 80625, 80626, 80627, 80628, 80630, 80631, 80633, 80635, 80643, 80655, 80616, 80634, 80642, 80646, 80662, 80663, 80502, 80503, 80509, 80510, 80516, 80517, 80523, 80524, 80530, 80531, 80537, 80538, 80544, 80545, 80551, 80552, 80558, 80559, 80565, 80566, 80572, 80573, 80579, 80580, 80586, 80587, 80593, 80594, 80600, 80601, 80607, 80608, 80637, 80639, 80641, 80645, 80647, 80648, 80649, 80651, 80636, 80638, 80652, 80653, 80504, 80505, 80511, 80512, 80518, 80519, 80525, 80526, 80532, 80533, 80539, 80540, 80546, 80547, 80553, 80554, 80560, 80561, 80567, 80568, 80574, 80575, 80581, 80582, 80588, 80589, 80595, 80596, 80602, 80603, 80609, 80610, 80656, 80657, 80658, 80660, 80665, 80675, 80682, 80684, 80674, 80664, 80659, 80666, 80679, 80506, 80513, 80520, 80527, 80534, 80541, 80548, 80555, 80562, 80569, 80576, 80583, 80590, 80597, 80604, 80611, 80667, 80671, 80676, 80677, 80678, 80680, 80686, 80688, 80689, 80690, 80687, 80612, 80644, 80614, 80632, 80654, 80685, 80673, 80672, 80683) {
            push(@items, $id);
        }
    }

    # TSS
    if ($client->GetLevel() >= 65 && $client->GetLevel() <= 75) {
        if ($client->GetGM()) {
            $client->Message(15, "TSS");
        }
        foreach my $id (46755, 46760, 46795, 46804, 46810, 46813, 46821, 46756, 46820, 46823, 46827, 46830, 46831, 46839, 46990, 46723, 46818, 46751, 46812, 46814, 46815, 46817, 46822, 46829, 46834, 46835, 46825, 46826, 46836, 46906, 46991, 46621, 46809, 46833, 53710, 46880, 46854, 46856, 46895, 46843, 46855, 46898, 46901, 46904, 46852, 46899, 46903, 46844, 46846, 46847, 46896, 46900, 46845, 46850, 46853, 46894, 46848, 46849, 46902, 46851, 46893, 46897, 53432, 53435, 53439, 53442, 53446, 53449, 53453, 53456, 53954, 53957, 53961, 53964, 53968, 53971, 53975, 53978, 53369, 53372, 53397, 53400, 53425, 53428, 53431, 53434, 53436, 53438, 53441, 53443, 53445, 53448, 53450, 53452, 53455, 53457, 53891, 53894, 53919, 53922, 53947, 53950, 53953, 53956, 53958, 53960, 53963, 53965, 53967, 53970, 53972, 53974, 53977, 53979, 46864, 53368, 53371, 53373, 53396, 53399, 53401, 53424, 53427, 53429, 53437, 53444, 53451, 53458, 53890, 53893, 53895, 53918, 53921, 53923, 53946, 53949, 53951, 53959, 53966, 53973, 53980, 46860, 46861, 46865, 46868, 46877, 46878, 46910, 46911, 46914, 46917, 46920, 46927, 53363, 53370, 53374, 53377, 53384, 53391, 53398, 53402, 53405, 53412, 53419, 53426, 53430, 53433, 53440, 53447, 53454, 53461, 53468, 53885, 53892, 53896, 53899, 53906, 53913, 53920, 53924, 53927, 53934, 53941, 53948, 53952, 53955, 53962, 53969, 53976, 53983, 53990, 46842, 46859, 46869, 46874, 46891, 46915, 46923, 46925, 46928, 53382, 53385, 53403, 53406, 53417, 53420, 53459, 53462, 53466, 53469, 53904, 53907, 53925, 53928, 53939, 53942, 53981, 53984, 53988, 53991, 46871, 46872, 46921, 46922, 46930, 53361, 53364, 53375, 53378, 53383, 53386, 53389, 53392, 53404, 53407, 53410, 53413, 53418, 53421, 53460, 53463, 53467, 53470, 53883, 53886, 53897, 53900, 53905, 53908, 53911, 53914, 53926, 53929, 53932, 53935, 53940, 53943, 53982, 53985, 53989, 53992, 46857, 46858, 46862, 46870, 46873, 46875, 46909, 46912, 46916, 46924, 53362, 53365, 53376, 53379, 53390, 53393, 53411, 53414, 53884, 53887, 53898, 53901, 53912, 53915, 53933, 53936, 46841, 46866, 46867, 46892, 46907, 46908, 46913, 46918, 46919, 53388, 53409, 53423, 53465, 53472, 53910, 53931, 53945, 53987, 53994, 46863, 53367, 53381, 53387, 53395, 53408, 53416, 53422, 53464, 53471, 53889, 53903, 53909, 53917, 53930, 53938, 53944, 53986, 53993, 53366, 53380, 53394, 53415, 53888, 53902, 53916, 53937, 46882, 46886, 46932, 46939, 46940, 46936, 46938, 53505, 46883, 46934, 46887, 46888, 46935, 46937, 46881, 46885, 46889, 46931, 46905, 46879, 46929, 46890) {
            push(@items, $id);
        }
    }

    # PoR
    if ($client->GetLevel() >= 60 && $client->GetLevel() <= 70) {
        foreach my $id (39216, 39217, 39225, 39219, 39220, 39222, 39264, 39224, 39234, 39300, 39211, 39244, 39210, 39246, 39243, 39253, 39263, 39269, 39271, 39275, 39277, 39281, 39283, 39287, 39289, 39293, 39295, 39299, 39301, 51705, 39256, 39266, 39267, 39273, 39279, 39285, 39291, 39297, 39312, 39322, 39328, 39261, 39262, 39270, 39276, 39282, 39288, 39314, 39320, 39323, 39330, 39331, 39242, 39252, 39268, 39274, 39280, 39286, 39292, 39298, 39324, 39332, 51701, 51702, 51704, 15001, 39313, 39315, 39316, 39319, 39329, 39336, 39340, 39342, 39311, 39321, 39327, 39350, 39362, 51706, 51707, 51708, 51709, 39338, 39348, 39352, 39353, 39358, 39364, 39351, 39360, 39361, 39339, 39343, 39349, 39355, 39356, 39357, 39363, 51703, 39341, 39347, 39359, 39335, 39337, 39345, 39346, 39375, 39376, 39368, 39366, 39254, 39294, 39371, 39372, 39373, 39374, 39367, 39365) {
            push(@items, $id);
        }
    }

    # DoD
    if ($client->GetLevel() >= 59 && $client->GetLevel() <= 69) {
        foreach my $id (83540, 83541, 83542, 83553, 83577, 83580, 83576, 83578, 83639, 83582, 83593, 83600, 83601, 83563, 83568, 83569, 83570, 83575, 83588, 83589, 83620, 83621, 83631, 83632, 83564, 83565, 83566, 83567, 83587, 83591, 83594, 83595, 83598, 83612, 83615, 83618, 83628, 83634, 83637, 83642, 83592, 83599, 83602, 83633, 83666, 83560, 83561, 83562, 83571, 83572, 83573, 83574, 83581, 83585, 83590, 83613, 83614, 83616, 83622, 83629, 83630, 83635, 83636, 83643, 83650, 83651, 83663, 83583, 83584, 83611, 83617, 83627, 83638, 83640, 83641, 83659, 83662, 83665, 83607, 83608, 83609, 83610, 83652, 83653, 83654, 83655, 83656, 83603, 83604, 83605, 83606, 83657, 83658, 83661, 83557, 83579, 83664) {
            push(@items, $id);
        }
    }

    
    # DoN
    if ($client->GetLevel() >= 50 && $client->GetLevel() <= 60) {
        foreach my $id (71618, 71591, 71589, 71588, 71590, 71592, 71593, 71594, 71628, 71629, 71617, 71625, 71627, 71637, 71649, 71624, 71626, 71645, 71641, 71644, 71652, 71595, 71642, 71643, 71646, 71647, 71648, 71650, 71651, 71662, 71597, 71638, 71639, 71640, 71596, 71655, 71656, 71661, 71658, 71659, 71654, 71657, 71672, 70972, 70976, 70980, 70981, 70982, 70983, 70984, 71665, 71666, 71671, 71668, 70973, 70974, 70975, 70977, 70978, 70979, 70985, 70986, 71664, 71667, 71669, 70971, 71653, 71663, 71673) {
            push(@items, $id);
        }
    }

    # OoW
    if ($client->GetLevel() >= 45 && $client->GetLevel() <= 55) {
        foreach my $id (70275, 70327, 70570, 70567, 70568, 70696, 70697, 70318, 70569, 70691, 70695, 70647, 70692, 70693, 12665, 19092, 52952, 62581, 70575, 70590, 70603, 70605, 70611, 70690, 9955, 57400, 62863, 70602, 70608, 70609, 70613, 70614, 70616, 70617, 70663, 70666, 71102, 52347, 52911, 61025, 62627, 70601, 70606, 70607, 70660, 70661, 70676, 77631, 70604, 70610, 70615, 70664, 70665, 70677, 71088, 71090, 71106, 71111, 71118, 70662, 71089, 71091, 71103, 71107, 71115, 71116, 70619, 70622, 70623, 70624, 70671, 71077, 71082, 71087, 71092, 71099, 71101, 71109, 71110, 71119, 71120, 70621, 70625, 70628, 70675, 71074, 71076, 71079, 71081, 71084, 71086, 71100, 71104, 71113, 71114, 70668, 70669, 70670, 70672, 71073, 71075, 71078, 71080, 71083, 71085, 71094, 71096, 71098, 71105, 71108, 71112, 71117, 60321, 60329, 70620, 70626, 70674, 71093, 71095, 71097, 47207, 47215, 47223, 47211, 47219, 47228, 47241, 47250, 18398, 47203, 47224, 47235, 50003, 64031, 70612, 70704, 70716, 70722, 70724, 47231, 47238, 47251, 70667, 70705, 70707, 70710, 70719, 70721, 47225, 47246, 47247, 47254, 70703, 70711, 70712, 70714, 70715, 70720, 70723, 47205, 47206, 47213, 47214, 47216, 47217, 47218, 47220, 47221, 47222, 47229, 47232, 47234, 47236, 47240, 47243, 47244, 47249, 47253, 47255, 47258, 47265, 70627, 70706, 70708, 70717, 70718, 47201, 47202, 47209, 47210, 47212, 47226, 47233, 47237, 47239, 47245, 47248, 47257, 47259, 47260, 47293, 47308, 47204, 47208, 47230, 47242, 47252, 47256, 47284, 47298, 47302, 47311, 70701, 70702, 70713, 70861, 70862, 70889, 70890, 70917, 70918, 70924, 70925, 70931, 70932, 70938, 70939, 70945, 70946, 47200, 47227, 47276, 47281, 47307, 70863, 70864, 70866, 70891, 70892, 70894, 70919, 70920, 70922, 70926, 70927, 70929, 70933, 70934, 70936, 70940, 70941, 70943, 70947, 70948, 70950, 47280, 70860, 70888, 70916, 70923, 70930, 70937, 70944, 47273, 47277, 47285, 47289, 47292, 47294, 47297, 47301, 47303, 47309, 47313, 47317, 47318, 47319, 47325, 70869, 70876, 70883, 70897, 70904, 70911, 70953, 70960, 47279, 47283, 47288, 70855, 70868, 70875, 70882, 70896, 70903, 70910, 70952, 70959, 47274, 47286, 47287, 47296, 47299, 47305, 47306, 47312, 70854, 70870, 70871, 70877, 70878, 70884, 70885, 70898, 70899, 70905, 70906, 70912, 70913, 70954, 70955, 70961, 70962, 47304, 47315, 47316, 70856, 70857, 70865, 70867, 70874, 70881, 70893, 70895, 70902, 70909, 70921, 70928, 70935, 70942, 70949, 70951, 70958, 16576, 19839, 20076, 47275, 47290, 47291, 47295, 52962, 57405, 62880, 64067, 70853, 47310, 70873, 70880, 70887, 70901, 70908, 70915, 70957, 70964, 47278, 47282, 70709, 70859, 47314, 52348, 57054, 62649, 67742, 77640, 47261, 47263, 70872, 70879, 70886, 70900, 70907, 70914, 70956, 70963, 47262, 70858, 47264, 60332, 47320, 47322, 47324, 47321, 47323, 18609, 48136, 48147) {
            push(@items, $id);
        }
    }
    
    # GoD
    if ($client->GetLevel() >= 40 && $client->GetLevel() <= 50) {
        foreach my $id  (68640, 68642, 68643, 68655, 68656, 68665, 68671, 68719, 68766, 68796, 68764, 69420, 68638, 68639, 68641, 68648, 68657, 68658, 68663, 68672, 69410, 69411, 68649, 68650, 68651, 68652, 68661, 68662, 68666, 69423, 69427, 68637, 68646, 68647, 68653, 68654, 68670, 68711, 68740, 68802, 68932, 68744, 68745, 68775, 68803, 68645, 68723, 68783, 68914, 68919, 68924, 68929, 69046, 69098, 69408, 52136, 52137, 68743, 68746, 68751, 68753, 68772, 68777, 68843, 67731, 67732, 67733, 67734, 68747, 68752, 68770, 68778, 68837, 68911, 68916, 68921, 68926, 68945, 68985, 68987, 68989, 68991, 69095, 52124, 68754, 68776, 68782, 68835, 68841, 68912, 68913, 68917, 68918, 68922, 68923, 68927, 68928, 68725, 68757, 68846, 68859, 68864, 68869, 68874, 68879, 68884, 68889, 68894, 68899, 68904, 68909, 68943, 69047, 69050, 69054, 69055, 68724, 68749, 68750, 68756, 68780, 68781, 68788, 68790, 68845, 68857, 68858, 68862, 68863, 68867, 68868, 68872, 68873, 68877, 68878, 68882, 68883, 68887, 68888, 68892, 68893, 68897, 68898, 68902, 68903, 68907, 68908, 68984, 68986, 68988, 68990, 52123, 67720, 67721, 67722, 67723, 67724, 67725, 67726, 67727, 67728, 67729, 67730, 68758, 68779, 68785, 68786, 68789, 68854, 68856, 68861, 68866, 68871, 68876, 68881, 68886, 68891, 68896, 68901, 68906, 68959, 69062, 69082, 69090, 52121, 68748, 68784, 68852, 68853, 68957, 69042, 69056, 69078, 69086, 67719, 68659, 68787, 68808, 68840, 68844, 68851, 68963, 68965, 68967, 68969, 68971, 68973, 68975, 68977, 68979, 68981, 68983, 69041, 69049, 69100, 69122, 69123, 69124, 69125, 68742, 68755, 68842, 68847, 68848, 68953, 68956, 68961, 69051, 69060, 69066, 69068, 69076, 69077, 69084, 69085, 52122, 68834, 68948, 68951, 68954, 69069, 69073, 69074, 69079, 69080, 69081, 69088, 69089, 69096, 69106, 69111, 69118, 69119, 68949, 68952, 68958, 69052, 69067, 69072, 69075, 69083, 69097, 68771, 68946, 68950, 68955, 68962, 68964, 68966, 68968, 68970, 68972, 68974, 68976, 68978, 68980, 68982, 69040, 69048, 69053, 69064, 69070, 69071, 69087, 69129, 69061, 69063, 69065, 69159, 69162, 69176, 67606, 68838, 69099, 69114, 69115, 69116, 69120, 69121, 69133, 69153, 69164, 69251, 69157, 69163, 69255, 68741, 69127, 69128, 69132, 69149, 69155, 69160, 69169, 69175, 69110, 69126, 69131, 69158, 69161, 69168, 69178, 69179, 68941, 68947, 69044, 69130, 69156, 69166, 69177, 69253, 69254, 67625, 69043, 69134, 69135, 69146, 69147, 69148, 69165, 69252, 69151, 69152, 68960, 69150, 69057, 69112, 69113, 69117) {
            push(@items, $id);
        }
    }

    # LDoN
    if ($client->GetLevel() >= 30 && $client->GetLevel() <= 40) {
        foreach my $id (62448, 62449, 62463, 62470, 68114, 68115, 68122, 68123, 68124, 68191, 68192, 68193, 68194, 62442, 62443, 62444, 62445, 62447, 62450, 62454, 62455, 62458, 62459, 62460, 62461, 62466, 62467, 62468, 62469, 68112, 68126, 62462, 62464, 62465, 68080, 68081, 68082, 68086, 68088, 68111, 68119, 68075, 68076, 68077, 68078, 68083, 68085, 68089, 68091, 68092, 68093) {
            push(@items, $id);
        }
    } 

    # PoP
    if ($client->GetLevel() >= 25 && $client->GetLevel() <= 35) {
        foreach my $id (9444, 10231, 11199, 11278, 11281, 11298, 11303, 11309, 15812, 15823, 15840, 16257, 20453, 20896, 32012, 3223, 7767, 8780, 8781, 9462, 9481, 9827, 9830, 9833, 9836, 9944, 9947, 9950, 9959, 10240, 10945, 11054, 11096, 11103, 11141, 11146, 11163, 11173, 11178, 11193, 11196, 11306, 11324, 11402, 11529, 11575, 11598, 11618, 11876, 13579, 13603, 13614, 13619, 13623, 13634, 13690, 13767, 15871, 16605, 19094, 19144, 20078, 20422, 20425, 20428, 20431, 20454, 22990, 24611, 24774, 25844, 27106, 27986, 27992, 28668, 55510, 2630, 9480, 11030, 11578, 12054, 12082, 13563, 13627, 13694, 15814, 15841, 16154, 16637, 16679, 20074, 20434, 21875, 22889, 22972, 24587, 24695, 25220, 26798, 26899, 26985, 26995, 27272, 27273, 28655, 28660, 9320, 9806, 9809, 9812, 9815, 9818, 9821, 9824, 10234, 10654, 11138, 11432, 11435, 11438, 11441, 11444, 11447, 11450, 12598, 12624, 12627, 12637, 12664, 12816, 13553, 16097, 16158, 16255, 16797, 16803, 16811, 16931, 19021, 19024, 19027, 19443, 19446, 19449, 19546, 19549, 19838, 20032, 21994, 21996, 24569, 25987, 25998, 26789, 26992, 27646, 28653, 28662, 55508, 55509, 55513, 55514, 68217, 9488, 10137, 10242, 12510, 12592, 13638, 14747, 14943, 14961, 15002, 20621, 21999, 22883, 24589, 26038, 26095, 26220, 27990, 8782, 12595, 13672, 15815, 16717, 16727, 16757, 16763, 16771, 16777, 16787, 19440, 24585, 24602, 26737, 26788, 27290, 32109, 55512, 5760, 8774, 9629, 11429, 15881, 22959, 24776, 26996, 32106, 32108, 5594, 16693, 21876, 21886, 21997, 22998, 26895, 26994, 28657, 29174, 32107, 68195, 68198, 13647, 13673, 14818, 20898, 21998, 25981, 26983, 15867, 20508, 20627, 24699, 25989, 26799, 26980, 26981, 26986, 26991, 28605, 28648, 28658, 28664, 28665, 68197, 7125, 21995, 22986, 26740, 26984, 26988, 27274, 27818, 28654, 28656, 28663, 28667, 68196, 4119, 8977, 9435, 9574, 15824, 15847, 15877, 15927, 22890, 23498, 25983, 26738, 26990, 28647, 47646, 47649, 47651, 47653, 47654, 47655, 47656, 9289, 13674, 24570, 24573, 24692, 25995, 26993, 27000, 28666, 31603, 10948, 15842, 20625, 26982, 27298, 28246, 28659, 24789, 24879, 28651, 28652, 68199, 7130, 15805, 20496, 21993, 26989, 28650, 28661, 32100, 32110, 47643, 47644, 47645, 47647, 47648, 47650, 47652, 55511, 7769, 16156, 22894, 26987, 27280, 28649, 7123, 22999, 29172, 24999, 26092, 47642, 24793) {
            push(@items, $id);
        }
    }

    # SoL
    if ($client->GetLevel() >= 15 && $client->GetLevel() <= 25) {
        foreach my $id (5105, 19725, 26516, 26519, 26568, 26764, 28975, 7868, 7870, 7871, 8288, 8289, 8733, 26525, 26530, 26535, 26546, 26549, 26553, 26554, 26556, 26564, 26566, 26567, 26574, 26581, 26582, 26584, 26585, 26588, 26594, 26595, 26605, 26751, 26752, 26754, 26755, 26756, 26758, 26763, 26766, 26771, 26772, 26774, 26781, 26785, 26849, 26860, 26861, 28104, 28144, 28147, 28805, 28814, 28824, 28825, 28845, 28846, 28849, 28850, 28892, 28903, 28908, 28909, 28910, 28914, 28918, 28920, 28921, 28931, 28932, 28933, 28934, 28935, 28945, 28948, 28951, 28958, 28963, 28976, 28978, 28981, 28982, 28991, 28998, 29861, 30527, 30532, 30533, 30534, 30539, 30548, 30551, 30552, 30553, 30562, 30563, 30564, 30569, 30570, 51221, 51225, 51229, 51231, 63170, 101782, 7825, 8359, 28970, 30541, 30565, 30566, 28959, 26604, 26780, 26786, 7869, 8364, 26749, 26761, 26770, 26773, 26775, 26776, 26778, 26779, 26782, 26784, 26787, 28887, 28915, 28916, 28919, 28926, 28937, 28942, 28952, 28957, 28962, 28964, 28965, 28967, 28980, 28986, 28992, 28993, 28994) {
            push(@items, $id);
        }
    } 

    # SoV
    if ($client->GetLevel() >= 10 && $client->GetLevel() <= 20) {
        foreach my $id (1099, 1116, 1157, 1172, 1200, 2498, 2579, 2699, 5443, 5451, 5457, 5468, 5838, 5843, 25043, 25200, 25364, 25371, 25379, 25385, 25406, 25459, 25487, 25494, 26012, 26025, 27321, 27322, 27326, 27328, 29319, 29327, 29329, 29433, 29435, 29438, 29439, 29441, 29442, 29443, 29444, 29450, 29451, 29453, 29454, 29476, 29482, 30369, 30503, 31036, 31100, 31110, 31121, 31141, 31148, 31167, 31170, 31213, 31217, 31219, 31236, 31246, 31301, 31308, 31309, 31319, 31321, 31325, 31328, 31332, 31343, 31344, 31347, 31358, 31359, 31360, 31363, 31364, 31369, 31384, 31385, 31386, 31414, 25023, 29446, 29462, 30506, 31310, 5440, 25354, 25368, 25378, 25382, 25389, 25427, 25437, 25441, 25452, 25529, 25543, 25570, 27258, 31029, 31033, 31040, 31078, 31092, 31117, 31124, 31131, 31134, 31138, 31155, 31169, 31190, 31194, 31214, 2748, 2842, 29455, 25298, 25375, 25413, 25515, 29647, 31064, 31099, 31103, 31113, 31120, 31162, 31226, 31315, 31322, 1100, 2509, 2698, 2700, 5837, 5839, 25098, 25195, 25197, 25198, 25201, 25202, 25857, 27323, 27324, 27325, 27327, 29328, 29434, 29436, 29437, 29440, 29459, 31211, 31212, 31220, 31223, 31240, 31244, 31303, 31318, 31326, 31334, 31338, 31365, 31367, 31373, 31413, 31415, 31462, 2581, 5447, 31047, 31145, 31176, 29645, 25199, 25396, 25434, 31085, 31127, 31183, 31186, 31228, 31377, 31378, 62433, 1137, 2510, 2580, 5776, 7277, 25044, 25194, 25196, 25203, 25206, 25207, 25208, 25209, 25210, 25211, 25212, 25858, 29456, 29457, 29648, 30385, 31224, 31225, 31227, 31230, 31231, 31232, 31233, 31234, 31235, 31239, 31241, 31242, 31243, 31245, 31305, 31306, 31316, 31317, 31348, 31351, 31354, 31366, 31375, 31376, 31390, 31411, 31417, 62428, 62430, 62431, 62436, 62429, 62432, 62434, 62435, 62439, 62437, 62438) {
            push(@items, $id);
        }
    }

    # RoK
    if ($client->GetLevel() <= 10) {
        foreach my $id (1601, 1628, 4520, 4527, 4534, 4541, 4548, 4555, 4562, 4569, 4576, 4582, 5164, 5465, 5532, 5613, 5717, 5727, 6602, 6606, 6667, 6672, 6674, 6675, 6676, 6677, 6678, 7201, 8495, 8496, 10099, 10383, 10650, 10651, 10652, 10821, 10892, 10908, 10909, 10910, 10912, 10914, 11057, 11601, 14341, 14383, 14709, 20487, 20488, 20490, 20542, 20544, 24609, 24610, 24613, 24615, 24616, 24617, 24621, 24628, 24631, 24635, 24636, 24637, 24639, 24640, 24641, 24649, 28034, 55497, 62191, 62233, 62238, 62241, 68299, 69362, 69369, 69378, 69379, 69380, 69385, 69386, 69387, 69388, 69403, 69462) {
            push(@items, $id);
        }
    }
    
    

    
    #if ($client->GetLevel() >= 40) {
    #    @items = (9488, 28797, 26786, 27290, 69416, 20896, 31233, 27986, 14962, 24774, 28654, 29198, 8733, 8498, 31332, 31385, 28925, 28924, 26771, 21995, 51222, 11447, 19838, 11193, 47647, 12816, 16777, 9821, 26749, 10240, 16152, 26990, 26991, 9959, 16158, 9481, 27274, 27167, 13664, 66398, 24773, 25858, 26761, 26556, 15927, 15877, 26551, 19443, 84121, 11141, 84122, 12598, 84123, 16717, 84124, 47648, 84125, 9806, 84126, 11432, 84127, 7770, 20620, 21810, 20507, 31348, 24576, 25989, 28970, 28947, 20453, 28915, 25995, 28881, 31467, 25197, 19082, 28934, 28912, 27815, 28935, 30539, 27818, 26752, 11030, 28667, 21993, 68198, 11103, 15758, 25206, 7925, 28937, 7825, 15770, 27273, 7924, 31246, 9497, 28648, 28892, 21998, 15814, 15847, 29031, 29033, 28926, 15002, 25044, 15637, 30534, 26759, 68195, 31417, 27106, 8504, 8576, 8648, 22972, 11096, 12082, 30541, 7919, 28979, 21996, 15840, 28964, 28992, 28959, 26567, 15842, 26766, 15815, 21997, 28943, 28942, 28605, 8977, 10664, 32107, 15881, 16156, 12054, 26773, 26095, 26763, 26762, 10913, 25194, 51221, 7385, 28918, 30565, 31231, 26560, 21875, 22890, 24776, 84150, 69387, 28949, 28902, 22999, 28900, 24647, 19079, 28149, 62787, 22975, 16097, 31227, 15864, 28660, 20032, 11196, 9824, 47652, 13553, 16787, 11450, 4119, 7125, 10242, 26775, 16679, 28962, 7130, 3223, 5594, 69381, 26980, 5760, 20621, 32100, 24879, 30524, 1116, 22986, 28145, 15841, 8780, 30569, 22998, 28649, 9586, 13672, 26737, 28948, 9574, 82711, 26983, 27315, 31299, 31248, 31296, 30928, 30925, 30923, 29598, 28104, 28657, 9480, 11324, 27648, 30732, 30730, 29663, 26849, 26860, 26798, 25212, 28899, 19144, 26543, 22907, 29468, 63170, 55509, 55510, 55513, 55514, 55512, 55508, 55511, 28897, 27990, 25857, 11878, 28982, 22990, 8773, 16154, 28957, 28664, 28662, 22880, 31603, 12510, 8772, 26799, 28246, 28144, 26774, 26996, 28967, 30552, 28653, 26809, 24611, 55296, 55297, 66318, 28936, 26581, 12592, 26770, 26092, 25849, 26087, 28650, 30538, 9485, 51233, 51234, 28981, 19546, 11173, 12637, 16763, 47645, 9815, 11441, 1549, 26220, 20627, 21886, 26562, 22894, 26535, 15929, 22889, 7869, 28647, 51238, 25209, 28986, 31226, 13650, 21999, 23498, 30014, 25562, 24602, 14943, 11019, 30915, 31199, 30958, 30960, 35001, 35002, 35003, 35004, 35005, 35006, 35007, 35008, 35009, 35010, 35011, 35012, 35013, 35014, 35015, 35016, 27272, 30525, 24587, 32106, 22985, 24692, 15751, 26557, 55504, 28146, 13634, 31237, 20422, 84142, 11281, 84143, 9833, 84144, 13603, 84145, 16811, 84146, 11575, 84147, 47651, 84148, 15119, 16691, 26604, 27295, 9479, 16637, 11402, 26772, 16725, 28965, 28651, 26783, 26777, 30532, 51237, 31457, 31459, 28889, 27649, 28951, 29456, 59949, 26553, 32108, 31238, 11309, 84128, 13627, 84129, 19027, 84130, 47654, 84131, 20434, 84132, 9950, 84133, 11876, 84134, 11303, 13619, 19021, 47655, 20428, 11598, 9944, 26782, 14961, 11018, 28658, 13647, 13657, 13680, 13670, 101186, 5854, 26769, 9444, 26751, 26779, 26984, 29174, 9462, 2509, 27159, 11306, 9947, 13623, 19024, 20431, 47653, 11618, 21884, 10654, 71006, 8782, 9289, 7767, 26755, 29596, 19088, 31306, 30527, 26895, 26758, 26778, 27646, 25981, 68217, 27000, 28652, 28659, 13638, 28997, 31472, 79895, 30528, 9320, 15813, 11408, 15764, 15824, 40356, 8789, 9442, 9490, 29599, 26989, 21994, 26993, 10231, 13690, 9469, 11429, 84114, 19440, 84115, 11138, 84116, 47642, 84117, 12595, 84118, 16693, 84119, 9629, 84120, 15823, 27700, 9436, 66397, 24695, 13668, 10945, 25211, 26994, 32109, 10137, 26992, 26757, 69389, 28914, 14818, 1552, 28910, 26776, 10845, 11298, 84135, 9836, 84136, 13614, 84137, 16931, 84138, 47656, 84139, 11578, 84140, 20425, 84141, 20078, 11278, 13579, 16803, 47649, 9830, 11529, 31229, 28991, 28663, 19094, 26517, 1158, 31239, 28898, 68196, 28958, 28952, 19074, 30531, 15773, 1154, 28928, 9468, 16605, 28798, 28893, 22959, 20625, 7868, 28901, 28888, 28932, 61948, 13694, 30566, 28661, 1557, 11426, 26754, 26564, 27298, 11551, 25998, 11323, 26740, 13654, 31339, 26986, 15805, 13673, 13674, 15822, 28919, 8007, 14733, 29861, 79887, 16255, 20623, 16257, 28993, 31461, 31460, 7123, 31464, 28972, 26765, 10234, 31245, 28148, 28655, 30567, 16567, 26750, 26753, 13767, 19437, 5723, 20496, 31244, 26549, 24789, 28980, 14341, 1156, 24999, 19442, 15474, 28882, 16575, 20454, 25983, 26987, 30843, 30786, 30842, 30789, 30788, 30787, 29597, 11879, 30526, 24585, 20508, 20898, 28656, 8774, 7769, 8364, 68197, 27957, 15812, 20486, 27992, 28995, 28987, 8002, 26789, 24699, 68199, 24573, 10948, 28973, 28909, 26995, 26780, 47650, 12624, 9809, 16727, 19446, 11435, 11146, 26784, 26584, 30893, 27960, 11438, 19449, 11163, 47644, 12627, 16757, 9812, 7927, 15767, 31355, 27168, 28920, 51231, 51226, 51224, 51232, 8781, 20074, 84107, 11199, 84108, 47646, 84109, 13563, 84110, 16797, 84111, 9827, 84112, 32012, 84113, 28886, 26760, 28921, 28927, 15873, 29172, 26981, 9435, 26985, 25201, 30570, 30564, 14747, 11668, 26982, 19023, 7823, 26764, 15867, 21876, 26748, 26899, 26768, 28998, 15776, 27297, 7387, 27989, 71230, 2630, 29648, 29645, 21809, 21805, 21807, 27280, 7926, 6858, 31512, 30845, 26988, 30563, 26550, 15871, 28666, 32110, 26781, 11054, 28668, 26788, 7871, 30551, 30553, 8289, 8288, 28665, 28147);
    #} elsif ($client->GetLevel() >= 30) {
    #    @items = (31242,26530,26585,30537,26786,69416,31233,31318,28977,8733,8498,31344,29433,4582,31332,31333,31386,31385,51235,51236,28925,28924,26771,51222,7789,26749,5838,27838,28916,25858,26761,26556,7922,31334,26551,5468,1550,27316,7921,31348,28824,25536,29485,29486,7822,28834,1200,26582,28805,27872,28855,30530,28970,28947,28811,28915,27929,25097,27958,28881,31467,29455,31327,31336,25197,28934,28912,8241,28935,7904,28989,30539,31335,26752,28996,1554,25206,7925,28937,31183,7825,8735,31462,7924,31246,28892,28926,25044,30534,26759,31417,31322,29457,1172,30541,7919,28979,28964,28992,28887,28959,26567,26766,25207,1551,31471,31376,31366,31390,28943,28942,28938,28890,26025,28994,26773,26763,26762,10913,25194,51221,7385,13355,28918,30565,31231,26560,2612,28949,28908,28902,28900,25378,48043,28149,4565,31227,31354,27952,30542,28945,26558,26775,28962,5777,28896,30524,1116,28145,28810,30569,2698,2498,26808,1547,28948,30548,27315,29458,31235,28104,51230,26849,26860,26848,5776,25213,25212,28899,30540,26543,27953,63170,28897,25857,28982,8359,26545,31241,28957,2510,26548,27313,26516,28144,51246,31402,29447,26774,51252,28967,30552,26809,2581,28826,28885,55296,7909,28936,26581,26770,30538,6437,51233,51234,28981,1556,51239,26605,1549,26562,31321,6415,28842,28854,26535,27137,7869,51238,25209,28986,31226,11684,28939,28933,26861,27899,27201,25562,14762,26579,7920,26566,30525,6287,26557,28146,31237,28806,26604,28833,26772,28965,26783,26777,30532,51237,28847,28922,28889,51251,7398,28951,29456,59949,26553,31238,26782,30533,26769,26756,26751,26779,31463,2509,27159,28840,32180,28821,1099,1112,31224,7277,51229,28946,31309,26755,30562,28825,28911,31306,30527,28903,26758,26778,25098,28514,31232,28997,31472,27951,30528,27148,28976,2580,27944,30571,27306,27326,30536,14754,24625,62371,11057,7820,30385,25211,28905,28984,25198,28884,26757,28914,8734,19719,31377,30388,24623,6831,1552,24627,28910,26776,24604,10845,31317,8727,31229,31008,28991,26517,1158,28898,28963,28958,28952,30531,5447,5451,26859,26819,28983,28844,1154,28928,27311,28893,30559,30554,7868,28901,28883,32166,31127,28888,31131,28940,28932,30556,26601,8725,30566,1114,1557,10851,26754,31211,28815,31359,26594,31358,11551,31212,31339,26563,30529,27261,1628,28919,29861,29860,79887,51244,28993,31461,31371,31460,31464,28972,26765,79643,31245,5149,31304,32319,27964,28148,1136,7923,30567,31228,26750,26753,25357,5723,51240,31373,31244,26549,26552,27317,30544,28980,31326,7870,7207,28882,28978,6359,13380,7465,24070,27870,30526,28846,27771,27791,27793,27792,27778,27777,30547,29687,26606,8364,28804,27959,27957,26587,28995,28987,27831,28973,28909,8726,26780,26784,51223,26584,27960,51248,51242,7927,55495,31355,28920,51231,51226,51225,51224,51232,51228,28886,28944,26760,28921,28927,32934,31234,25201,30570,30564,30543,25094,11668,31240,27888,31303,31236,7823,26764,31396,26768,28998,25208,25434,7387,29648,31465,25199,31466,29645,31316,7926,8407,30563,2285,31106,31110,26550,26603,26781,51227,5839,31230,45137,7871,30551,30553,8289,8288,10912,28147);
    #} elsif ($client->GetLevel() >= 20) {
    #    @items = (25211, 31234, 29648, 2611, 31145, 31318, 25858, 1550, 25210, 25206, 31223, 31462, 31322, 25207, 31471, 31376, 31366, 25194, 31354, 2700, 2698, 31375, 5776, 25213, 25212, 31241, 2510, 1556, 1549, 25209, 31243, 27159, 31365, 6844, 1099, 7277, 25456, 31306, 25098, 31232, 31472, 30385, 25211, 10845, 31124, 31127, 31131, 31215, 31398, 1137, 31461, 31460, 31464, 20542, 29328, 5723, 31373, 31326, 24070, 25396, 25201, 25208, 29648, 25199, 29645, 31316, 5839);
    #} elsif ($client->GetLevel() >= 10) {
    #    @items = (4520, 4516, 4523, 4527, 4530, 4534, 4537, 4541, 4544, 4548, 4551, 4555, 4558, 4562, 4565, 4569, 4572, 4576, 10912, 30385, 31231, 52513, 25044, 25206, 31381, 25207, 6881, 31141, 31313, 31332, 31333, 31388, 31386, 31387, 31385, 5838, 31325, 31334, 30072, 10910, 66177, 31099, 31103, 31100, 1279, 31468, 31336, 25197, 25043, 29686, 6360, 25044, 31379, 1172, 6811, 1746, 31372, 10913, 25296, 6673, 5837, 14714, 31470, 1116, 2498, 2748, 2842, 26012, 5836, 30505, 1097, 2735, 25857, 31402, 25555, 31113, 2581, 31117, 31310, 31138, 25202, 5705, 31321, 31178, 14383, 31237, 25045, 29319, 31463, 2509, 27151, 6845, 6849, 6846, 20490, 31309, 31360, 31374, 31381, 28034, 1113, 27321, 27326, 27322, 27328, 1605, 1199, 2065, 2582, 31469, 9843, 1114, 1557, 31359, 1133, 31339, 31342, 1628, 31371, 31349, 31347, 10651, 36223, 14341, 10650, 31331, 4920, 31308, 9630, 31399, 11668, 2924, 31465, 31191, 31190, 31194, 31195, 1138, 31110, 31153, 31150, 31148, 31152, 25200, 31337, 29615, 10912, 26009);
    #} else {
    #    @items = (9350, 7314, 11912, 10325, 5424, 6692, 9027, 7323, 5642, 6305, 13942, 6932, 57018, 5011, 52036, 52026, 8312, 5665, 5622, 3616, 6625, 7254, 5661, 7318, 7312, 9028, 7210, 9206, 5163, 7050, 6675, 11552, 7406, 6681, 5057, 7238, 10581, 5631, 11630, 6359, 10219, 5155, 9311, 5665, 11645, 7211, 5156, 11626, 5649, 7222, 9315, 10859, 5667, 7237, 14722, 11607, 5401, 5152, 9205, 11644, 11585, 6685, 6679, 6404, 6610, 5158, 14759, 5500, 12863, 6639, 4504, 10366, 3212, 3040, 1410, 4313, 11978, 11911, 11584, 3312, 10587, 2341, 2373, 1617, 2332, 2345, 10314, 10338, 11902, 10148, 2731, 2406, 1259, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 4153, 4154, 4155, 4156, 4157, 4158, 4159, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4331, 4334, 4335, 4337, 14714, 14751, 10151, 11917, 10854, 3307, 4302, 4504, 14751, 2347, 11538, 2461, 11624, 10593, 1412, 1904, 1358, 2458, 10361, 6680, 10150, 1194, 1408, 10216, 10143, 1354, 6329, 4169, 4166, 4170, 4161, 14045, 4515, 4517, 4518, 4519, 4521, 4522, 4524, 4525, 4526, 4528, 4529, 4531, 4532, 4533, 4535, 4536, 4538, 4539, 4540, 4542, 4543, 4545, 4546, 4547, 4549, 4550, 4552, 4553, 4554, 4556, 4557, 4559, 4560, 4561, 4563, 4564, 4566, 4567, 4568, 4570, 4571, 4573, 4574, 4575, 4577, 4941, 4942, 4943, 4945, 4947, 4948, 14709, 14730, 1622, 1620, 11646, 11621, 2747, 11641, 1262, 10313, 1608, 11601, 4407, 4133, 2300, 1357, 10580, 4171, 4164, 4946, 4944, 2735, 2463, 20544, 68299, 10650, 20487, 14383, 20542, 10651, 10099, 11057, 20488, 20490, 14341, 5532, 10652, 31236, 30365, 14714, 25212);
    #}


    if ($isMiscStuff) {
        @items = (40999, 41000, 42039, 42044, 42049, 42054, 42104, 42109, 42114, 42119, 42134, 42191, 42192, 42193, 42194, 42195, 42196, 42197, 42198, 42205, 42207, 42208, 42210, 62440, 62456, 68016, 68017, 68018, 68019, 68028, 68037, 68038, 68039, 68043, 68044, 68045, 68046, 68047, 68048, 68049, 68050, 68104, 68106, 68107, 68108, 68109, 68110, 68120, 68165, 68179, 67681, 67682, 67683, 67684, 67685, 67686, 67687, 67688, 68433, 68473, 68536, 68596, 68597, 68599, 68600, 68601, 68602, 68667, 68668, 68669, 68692, 68693, 68700, 68759, 68760, 68762, 68763, 68791, 68792, 68793, 68794, 68795, 68797, 68798, 68800, 68805, 68806, 68807, 68825, 68827, 68828, 68831, 68833, 68940, 69093, 69094, 69140, 69141, 69459, 69461, 93861, 47337, 47338, 47339, 47340, 47341, 47342, 47343, 47344, 47345, 47346, 47347, 70053, 70054, 70072, 70073, 70074, 70108, 70109, 70167, 70168, 70185, 70186, 70256, 70257, 70258, 70259, 70276, 70277, 70278, 70279, 70289, 70290, 70291, 70292, 70305, 70306, 70307, 70308, 70309, 70310, 70311, 70503, 70523, 70618, 70673, 70694, 72698, 72704, 80015, 81926, 71402, 71403, 71404, 71405, 71422, 71515, 71571, 71598, 71599, 71660, 71670, 71852, 71856, 71857, 71902, 71903, 71904, 71927, 71928, 82035, 82036, 82037, 82038, 82053, 82054, 82060, 82061, 82062, 82063, 82064, 82065, 82066, 82067, 82068, 82069, 82138, 82139, 82140, 82141, 82142, 82143, 82144, 82192, 82337, 82340, 82452, 82467, 82468, 82537, 82591, 51683, 80398, 83302, 83395, 83408, 83422, 83438, 83465, 83468, 83469, 83492, 83498, 83506, 83544, 83545, 83554, 83555, 83736, 83737, 83738, 83742, 83745, 83748, 83842, 83849, 83852, 83926, 83928, 83934, 83936, 83937, 83938, 83940, 83967, 83969, 83981, 86286, 89630, 89631, 89632, 89633, 89634, 89635, 89636, 89637, 89638, 89639, 89640, 89641, 89643, 39132, 39159, 39162, 39168, 39175, 39176, 39178, 39182, 39183, 39184, 39193, 39194, 39195, 39196, 39212, 39236, 39245, 39255, 39265, 39272, 39278, 39284, 39290, 39296, 39302, 39317, 39318, 39326, 39333, 39369, 39370, 39571, 39710, 51710, 51711, 85667, 85670, 89862, 89884, 89893, 89894, 89895, 89916, 89917, 89920, 89926, 89927, 89930, 90224, 121591, 46489, 46531, 46534, 46599, 46638, 46658, 46659, 46661, 46674, 46675, 46676, 46691, 46692, 46693, 46694, 46707, 46708, 46709, 46725, 46728, 46744, 46754, 46759, 46761, 46762, 46763, 46764, 46765, 46766, 46767, 46768, 46769, 46770, 46771, 46772, 46773, 46774, 46775, 46776, 46811, 46819, 46828, 46838, 46970, 53631, 53646, 53702, 53707, 53708, 53735, 79953, 80108, 80160, 80170, 80190, 80200, 80201, 80209, 80210, 80230, 80231, 80240, 80241, 80260, 80261, 80270, 80640, 80650, 80681, 80691, 51900, 79570, 79571, 79572, 79573, 79574, 79575, 79576, 79577, 79579, 79580, 79581, 79582, 79583, 79590, 79790, 100083, 100084, 101037, 101038, 101039, 101041, 101043, 101045, 101149, 101151, 101152, 101153, 101154, 101155, 101157, 101160, 101161, 101162, 101230, 101232, 101234, 101235, 101236, 101350, 101352, 101353, 101354, 101355, 101356, 101357, 101358, 101359, 101375, 101376, 42727, 42755, 42850, 50949, 50950, 50951, 50952, 50953, 50954, 50955, 50956, 51915, 51930, 54825, 54826, 54827, 54828, 54906, 54907, 54908, 54909, 105641, 105643, 105772, 105773, 105774, 105775, 105776, 105777, 105778, 105779, 105868, 105869, 105870, 105871, 105872, 105877, 105878, 105962, 105963, 105964, 105965, 105966, 105968, 105969, 43945, 43946, 43947, 43948, 43949, 43950, 43951, 43952, 43953, 43954, 43955, 43956, 43957, 43958, 109265, 109266, 109267, 109268, 109269, 109270, 109271, 109272, 109273, 109765, 109766, 109767, 109768, 109769, 109770, 109771, 109772, 109773, 110265, 110266, 110267, 110268, 110269, 110270, 110271, 110272, 110273, 110765, 110766, 110767, 110768, 110769, 110770, 110771, 110772, 110773, 120100, 120101, 120102, 120103, 120104, 120105, 120106, 120107, 120500, 120501, 120502, 120503, 120504, 120505, 120506, 120507, 120508, 120509, 120510, 120511, 120900, 120901, 120902, 120903, 120904, 120905, 120906, 120907, 120908, 120909, 120910, 120911, 121300, 121301, 121302, 121303, 121304, 121305, 121306, 121307, 121308, 121309, 127270, 127271, 127272, 127273, 127274, 127275, 127670, 127671, 127672, 127673, 127674, 127675, 127676, 127677, 128070, 128071, 128072, 128073, 128074, 128075, 128076, 128078, 128079, 128080, 128081, 128470, 128471, 128472, 128473, 128474, 128475, 128476, 128477, 128478, 128479, 128480, 128481, 128482, 128483, 128484, 128485, 128486, 128487, 128488, 128489, 55753, 63855, 63856, 63857, 79459, 79460, 79461, 79462, 79463, 79464, 79465, 79466, 117090, 117091, 117092, 117093, 117094, 117095, 117096, 117097, 117098, 132560, 132561, 132562, 132563, 132564, 132565, 132566, 132567, 132568, 132819, 132910, 132911, 132912, 132913, 132914, 132915, 132916, 132917, 133170, 133177, 133178, 133179, 133180, 139090, 139091, 139092, 139093, 139094, 139095);
    }
    my $purity = 0;
    #$client->Message(15, "size before: " . $#items);

    my @loot;

    foreach my $id (@items) {
        my $isValid = 1;
        
        my $itemRaces = $client->GetItemStat($id, "races");
        if (($itemRaces & $races{$race}) != $races{$race}) {
            $isValid = 0;
        }

        #my $purity = $client->GetItemStat($id, "purity");
        #if ($purity < 1) {
        #    $isValid = 0;
        #}

        my $proclevel = $client->GetItemStat($id, "proclevel");
        if ($proclevel > $client->GetLevel()) {
            $isValid = 0;
        }

        $proclevel = $client->GetItemStat($id, "proclevel2");
        if ($proclevel > $client->GetLevel()) {
            $isValid = 0;
        }

        my $clicklevel = $client->GetItemStat($id, "clicklevel");
        if ($clicklevel > $client->GetLevel()) {
            $isValid = 0;
        }

        $clicklevel = $client->GetItemStat($id, "clicklevel2");
        if ($clicklevel > $client->GetLevel()) {
            $isValid = 0;
        }

        my $itemtype = $client->GetItemStat($id, "itemtype");
        if ($isMiscStuff && $itemtype != 54) {
            $isValid = 1;
        }

        my $itemClasses = $client->GetItemStat($id, "classes");
        if (($itemClasses & $classes{$class}) != $classes{$class}) {
            $isValid = 0;
        }


        my $reqlevel = $client->GetItemStat($id, "reqlevel");
        if ($reqlevel > $client->GetLevel()) {
            $isValid = 0;
        }

        #override valid if potion (21)
        if ($itemtype == 21) {
            $isValid = 1;
        }

        #$loregroup = $client->GetItemStat($id, "loregroup");
        #if ($loregroup > 0 && plugin::check_hasitem($client, $id)) {
        #    $isValid = 0;
        #}

        if ($isValid) {
            push(@loot, $id);
            next;
        }
    }
    
    #$client->Message(15, "size after: " . $#loot);
    #if ($poolTotal < 1) {
    #  $client->Message(15, "not enough items to roll on.. report to shin!");
    #    return 0;
    #}

    if ($client->GetGM()) {
        $client->Message(15, "total size: " . $#loot);
    }
    my $roll = quest::ChooseRandom(0..$#loot);
    if ($client->GetGM()) {
        $client->Message(15, "rolling between 0 and " . $#loot . ", I got result: " . $roll . " with " . $isSlotRequired . " which is itemid " . $loot[$roll]);
    }
    return $loot[$roll];
}

sub GiveAA {
    $client = shift;
    $level = $client->GetLevel();
    if ($level < 51) {
        return;
    }
    $connect = plugin::LoadMysql();

    $bitClass = 1 << $client->GetClass();
    if ($client->GetGM()) {
        $client->Message(12, "--- START AA --- $bitClass");
    }
    
    
    

    $query = "SELECT skill_id, name FROM altadv_vars WHERE ((classes & ?) = ?) AND class_type <= ?;";
    $query_handle = $connect->prepare($query);
    $query_handle->execute($bitClass, $bitClass, $level);
    while (@row = $query_handle->fetchrow_array()){
        $aaskillid = $row[0];
        $skillname = $row[1];
        
        $rankid = $aaskillid;
        if (index($skillname, "Unknown") != -1) {
            next;
        }
        $moreRanks = 1;
        $rankLevel = 1;
        
        $firstRun = 1;
        while ($moreRanks) {
            if ($firstRun) {
                $rq = "SELECT r.id, r.level_req, r.next_id FROM aa_ranks r WHERE r.title_sid = ?";
            } else {
                $rq = "SELECT r.id, r.level_req, r.next_id FROM aa_ranks r WHERE r.id = ?";
            }
            $rh = $connect->prepare($rq);
            $rh->execute($rankid);
            if ($rh->rows == 0) {
                $moreRanks = 0;
                next;
            }
            @rr = $rh->fetchrow_array();
            $aaskillid = $rr[0];
            $levelreq = $rr[1];
            
            if ($levelreq > $level) {
           #     $client->Message(15, "skill $skillname ($aaskillid) requires $levelreq, skip");
                $moreRanks = 0;
                next;
            }

          #  $client->Message(15, "[$aaskillid,$rankid] is $rankLevel vs [".$client->GetAALevel($aaskillid).",".$client->GetAALevel($rankid)."] $skillname");

            if ($client->GetAALevel($aaskillid) < $rankLevel) {
             #   $client->Message(15, "increasing $skillname ($aaskillid) to lvl $rankLevel");
                $client->IncrementAA($aaskillid);
            }
            $rankid = $rr[2];
            $rankLevel++;
            $firstRun = 0;
        }
    }

    #$client->GetAALevel(uint32 aa_skill_id)
    #$client->IncrementAA(uint32 aa_skill_id)
}